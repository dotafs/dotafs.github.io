<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>算法-对时间复杂度的汇总</title>
    <link href="/2022/11/23/%E7%AE%97%E6%B3%95-%E5%AF%B9%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E7%9A%84%E6%B1%87%E6%80%BB/"/>
    <url>/2022/11/23/%E7%AE%97%E6%B3%95-%E5%AF%B9%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E7%9A%84%E6%B1%87%E6%80%BB/</url>
    
    <content type="html"><![CDATA[<h1 id="P-NP-P-SPACE"><a href="#P-NP-P-SPACE" class="headerlink" title="P,NP,P-SPACE"></a>P,NP,P-SPACE</h1><h3 id="P"><a href="#P" class="headerlink" title="P"></a>P</h3><p>Polynomial time 多项式时间内($n^c$)有正确解。n是输入规模，c是常数。ep：是否是质数，两点之间最短距离。</p><h3 id="NP"><a href="#NP" class="headerlink" title="NP"></a>NP</h3><p>Non-deterministic Polynomial time 能在多项式时间内验证是否有正确答案。返回True，False。NP问题都有“short witnesses”使其能快速验证答案。</p><h3 id="PH"><a href="#PH" class="headerlink" title="PH"></a>PH</h3><p>Polynomial Hierarchy(多层式分级) 如果一个问题开始是NP，但随后会增加额外的复杂性，该问题就是PH。ep: 给定X，是否存在一个Y，使得对于所有的Z。</p>]]></content>
    
    
    
    <tags>
      
      <tag>36111</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>算法5</title>
    <link href="/2022/11/07/%E7%AE%97%E6%B3%955/"/>
    <url>/2022/11/07/%E7%AE%97%E6%B3%955/</url>
    
    <content type="html"><![CDATA[<p>Log Time &lt;&#x3D; Nlog Time &lt;&#x3D; P Time &lt;&#x3D; NP Time &lt;&#x3D; P Space &#x3D;&#x3D; NP Space &lt;&#x3D; Exp Time &lt;&#x3D; NExpTime &lt;&#x3D; ExpSpace &lt; NExpSpace &lt;&#x3D; 2ExpTime</p><ul><li>if ϕ1 and ϕ2 are formulas, then so are</li></ul><p>(¬ϕ1), (ϕ1 ∨ ϕ2), (ϕ1 ∧ ϕ2), (ϕ1 → ϕ2)</p><h2 id="lecture-2"><a href="#lecture-2" class="headerlink" title="lecture_2"></a>lecture_2</h2><h2 id="SAT-amp-k-SAT"><a href="#SAT-amp-k-SAT" class="headerlink" title="SAT &amp; k-SAT"></a>SAT &amp; k-SAT</h2><p>SAT</p><p>Given: a set of clauses Γ;<br>Return: Yes if Γ is satisfiable, and No otherwise.</p><p>k-SAT</p><p>Given: a set of clauses Γ, each with at most k literals;<br>Return: Yes if Γ is satisfiable, and No otherwise.</p><h2 id="formula"><a href="#formula" class="headerlink" title="formula"></a>formula</h2><ul><li><p>proposition letters(variables): p&amp;q 的p和q</p></li><li><p>connectives:  &amp;, v, -&gt;, and &lt;-&gt;.</p></li><li><p>leteral:     p or ¬p (p is proposition letter)</p></li><li><p>opposite leteral : l 上面一个横杠</p></li><li><p>clause: A clause is an expression l1 v l2 v· · · ∨ k , where the li are<br>literals.   ep: p1 ∨ ¬p2 ∨ p3</p></li></ul><p>P &#x3D; {p1, p2, . . .}</p><p>• every element of P is a formula</p><p>• if ϕ1 and ϕ2 are formulas, then so are</p><p>(¬ϕ1), (ϕ1 ∨ ϕ2), (ϕ1 ∧ ϕ2), (ϕ1 → ϕ2)</p><h2 id="assignment"><a href="#assignment" class="headerlink" title="assignment"></a>assignment</h2><p>• An assignment is a function θ : P → {T, F}.</p><p>• we extend θ to formulas by setting</p><p>θ(¬ϕ1) &#x3D; T iff ϕ1 &#x3D; F</p><h2 id="satisfiable"><a href="#satisfiable" class="headerlink" title="satisfiable"></a>satisfiable</h2><p>• A formula ϕ is satisfiable if there exists an assignment θ such<br>that θ(ϕ) &#x3D; T.</p><ul><li>set of clauses : there exists an assignment θ such that θ(γ) &#x3D; T for all γ ∈ Γ.</li></ul><h2 id="PROPOSITIONAL-SAT"><a href="#PROPOSITIONAL-SAT" class="headerlink" title="PROPOSITIONAL SAT"></a>PROPOSITIONAL SAT</h2><p>NP time </p><p>Given: a propositional logic formula ϕ;</p><p>Return: Yes if ϕ is satisfiable, and No otherwise.</p><h2 id="SAT"><a href="#SAT" class="headerlink" title="SAT"></a>SAT</h2><center><img src="/2022/11/07/%E7%AE%97%E6%B3%955/1.jpeg" width="400" height="200"> <br></center><h1 id="Integer-Linear-Programming"><a href="#Integer-Linear-Programming" class="headerlink" title="Integer Linear Programming"></a>Integer Linear Programming</h1><p>Cramer’s rule </p><p>Ax &#x3D; b with det(A) !&#x3D; empty</p><p>xi &#x3D; det(Ai) &#x2F; det(A)</p><p>Ai is the result of replacing the ith column of A by b</p><p>｜det(A)｜ &lt;&#x3D; $2^nM^n$</p><p>no matter how many veribles（non-zero value） -&gt; still small.</p><p>LP-feasibility is NPTIME 并 co-NPTIME</p><p>P-feasibility is P-TIME</p><p>$Ax &#x3D; b   x&gt;&#x3D;b$</p><p>$x^T (A^Ty) &#x3D; b^T y$</p><p>$（&gt;&#x3D;0 &gt;&#x3D;0 &lt;0)$ 为什么这里第一个0没有下划线</p>]]></content>
    
    
    
    <tags>
      
      <tag>36111</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ux star 总结</title>
    <link href="/2022/11/04/ux-star-%E6%80%BB%E7%BB%93/"/>
    <url>/2022/11/04/ux-star-%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<h2 id="Star硬件上的设施"><a href="#Star硬件上的设施" class="headerlink" title="Star硬件上的设施"></a>Star硬件上的设施</h2><p>1981年4月，施乐公司宣布推出8010明星信息系统，这是一款为办公室设计的新型个人电脑。它由一个处理器、一个大显示屏、一个键盘和一个光标控制装置组成（见照片1），是为处理信息的商业专业人士设计的。</p><p>Star是一个多功能系统，结合了文件创建、数据处理和电子归档、邮寄和打印。文档创建包括文本编辑和格式化、图形编辑、数学公式编辑和页面布局。数据处理涉及同质化的关系型数据库，可以在用户控制下进行分类、过滤和格式化。归档是利用以太网局域网络的网络服务的一个例子（见参考文献9和13）。文件可以存储在工作站的磁盘上、工作站网络上的文件服务器上或不同网络上的文件服务器上。邮件允许工作站的用户相互通信。打印利用激光驱动的光栅打印机，能够同时打印文本和图形。</p><p>正如Jonathan Seybold所写，”这是一个非常不同的产品。不同的是，它真正连接了文字处理和排版功能；不同的是，它比之前的任何产品都具有更广泛的功能；不同的是，它向商业市场引入了人类工程中的全新概念。(见参考文献15)。</p><h2 id="明确以用户为宗旨设计系统"><a href="#明确以用户为宗旨设计系统" class="headerlink" title="明确以用户为宗旨设计系统"></a>明确以用户为宗旨设计系统</h2><p>我们从Star中学到了在编写软件之前制定基本概念（用户的概念模型）的重要性，而不是事后再加上一个用户界面。</p><p> One of the most troublesome and least understood aspects of interactive systems is the user interface.</p><p>交互式系统中最麻烦和最不被理解的方面之一是用户界面。在用户界面的设计中，我们关注几个问题：提供用户可以向计算机表达他们的命令的语言；设计向用户显示系统状态的显示方式；以及其他影响用户对系统行为理解的更抽象的问题。这些问题中的许多都是非常主观的，因此经常以一种临时的方式来解决。然而，我们相信，可以开发出更加严格的用户界面设计方法…</p><p>这些设计方法都不尽如人意，其基本原因是：它们都忽略了设计任何成功的用户界面之前的一个重要步骤，即任务分析。我们指的是在引入拟议的计算机系统之前，对用户执行的任务进行分析。任务分析包括确定谁是用户，他们执行任务的目标是什么，他们在执行任务时使用什么信息，他们产生什么信息，以及他们使用什么方法。对输入和输出信息的描述应该包括对用户使用的各种对象或个别类型的信息实体的分析。</p><p>有些类型的概念对人们来说本来就很难掌握。在不太正式的情况下，我们在Star设计之前和期间的经验使我们得出以下分类。</p><p>EasyHard<br>concreteabstract<br>visibleinvisible<br>copyingcreating<br>choosingfilling in<br>recognizinggenerating<br>editingprogramming</p><h2 id="设计目标"><a href="#设计目标" class="headerlink" title="设计目标"></a>设计目标</h2><pre><code class="hljs">familiar user’s conceptual modelseeing and pointing versus remembering and typingwhat you see is what you getuniversal commandsconsistencysimplicitymodeless interactionuser tailorability</code></pre><h3 id="familiar-user’s-conceptual-model"><a href="#familiar-user’s-conceptual-model" class="headerlink" title="familiar user’s conceptual model"></a>familiar user’s conceptual model</h3><p>物理办公室</p><p>让用户不感觉陌生，方便学习。</p><p>虽然我们希望与物理世界进行类比以获得熟悉感，但我们并不希望将自己限制在其能力范围内。星际的存在理由之一是，实物并不能为人们提供足够的力量来管理 “信息时代 “日益增长的复杂性。例如，我们可以利用计算机快速搜索的能力，为其电子文件抽屉提供搜索功能，从而帮助解决长期存在的文件丢失问题。</p><h3 id="Desk"><a href="#Desk" class="headerlink" title="Desk"></a>Desk</h3><p>你可以把文件无限期地留在你的桌面上，就像在一个真正的桌子上一样，或者你可以把它们归入文件夹或文件抽屉。</p><p>Star的原则和 “通用 “命令（将在下文中讨论）被应用于整个系统，使得在一个领域学到的经验可以应用于其他领域。<br>物理办公室的模式提供了一个简单的基础，在此基础上，学习可以以渐进的方式进行。你不会一下子接触到全新的概念。你的大部分现有知识都被嵌入到这个基础中。</p><p>例如，Star的记录处理设施不能使用物理办公室模型，因为物理办公室没有名副其实的 “记录处理”。因此，我们发明了一种不同的模式，即把记录文件作为字段的集合。一条记录可以显示为表格中的一行，也可以显示为表格中填入的字段。查询是通过在记录的空白例子中填写描述所需值的谓词来完成的，这在哲学上类似于Zloof的 “逐例查询”（见参考文献21）。</p><h3 id="Seeing-and-Pointing"><a href="#Seeing-and-Pointing" class="headerlink" title="Seeing and Pointing"></a>Seeing and Pointing</h3><p>一个设计良好的系统会让所有与任务相关的东西都在屏幕上显示出来。它不会把东西藏在CODE+键的组合下，也不会强迫你记住惯例。那会给你的记忆带来负担。</p><p>在Star中，我们努力使系统中的对象和行动都是可见的</p><p>属性表可以被认为是对象的另一种表现形式。屏幕向你显示对象的可见特征，如文本字符的字体或图标的名称。属性表向你展示了对象的底层结构，因为它们使这种结构变得可见和可访问。</p><h3 id="What-You-See-Is-What-You-Get"><a href="#What-You-See-Is-What-You-Get" class="headerlink" title="What You See Is What You Get"></a>What You See Is What You Get</h3><p>“所见即所得”（或称所见即所得）指的是显示屏幕准确呈现印刷页面的情况。在具有多字体和可变行距等功能的系统中，”所见即所得 “要求使用位映射显示器，因为只有这样才有足够的图形能力来准确呈现这些特性。</p><p>所见即所得 “是文档创建系统的一种简化技术。所有的构图都在屏幕上完成。它消除了困扰文档编译器用户的反复操作。你可以在屏幕上检查一个页面的外观，并进行修改，直到它看起来是正确的。</p><h3 id="universal”-or-“generic”-commands"><a href="#universal”-or-“generic”-commands" class="headerlink" title="universal” or “generic” commands"></a>universal” or “generic” commands</h3><p> MOVE, COPY, DELETE, SHOW PROPERTIES, COPY PROPERTIES, AGAIN, UNDO, and HELP.</p><p> 无论选择什么类型的对象，每个命令的执行方式都是一样的</p><p> 每条命令都能满足各种需要，这意味着需要的命令较少。这种简单性本身是可取的，但它还有一个微妙的优势：它使用户很容易形成系统的模型。人们可以使用他们理解的东西。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs"><br>就像科学的进步来自于简单、清晰的理论一样，计算机可用性的进步也将取决于简单、清晰的用户界面。<br><br></code></pre></td></tr></table></figure><p>许多简化来自于Star的面向对象的界面。设置属性的动作也取代了无数的命令。例如，改变段落的边距在许多系统中是一个命令。在Star，你可以通过选择一个段落对象并设置其MARGINS属性来实现。(关于面向对象语言的更多信息，请参见1981年8月的BYTE）。-</p><h3 id="consistency"><a href="#consistency" class="headerlink" title="consistency"></a>consistency</h3><p>一致性主张机制在任何地方都应该以相同的方式使用。例如，如果鼠标左键被用来选择一个字符，那么同样的按钮也应该被用来选择一个图形线或一个图标。每个人都同意，一致性是一个令人钦佩的目标。然而，这也许是计算机系统中最难实现的一个特性。事实上，即使在中等复杂度的系统中，一致性也可能没有很好的定义。</p><p>第一种方案的一致性论证如下：当你把一个图标移到一个外箱时，系统会把它寄出，然后从你的桌面上删除它。当你把一个图标移到文件抽屉里时，系统会把它归档，然后从你的桌面上删除它。因此，当你移动一个图标到打印机时，系统应该打印它，然后从你的桌面上删除它。功能图标之间的行为应该是一致的。</p><p>第二种选择的一致性论据是：用户在桌面层面的概念模型是物理办公室的隐喻。图标的行为应该与它们的物理对应物类似。图标在被邮寄后被删除是有道理的，因为当你把一张纸放在一个物理的邮筒里，邮递员把它捡起来后，它就不见了。然而，打印机的物理模拟物是办公室的复印机，当你复制一张纸的时候，并没有删除它的概念。功能图标的行为应该与它们的物理对应物一致。</p><h3 id="Simplicity"><a href="#Simplicity" class="headerlink" title="Simplicity"></a>Simplicity</h3><p>在Star，我们试图遵循Alan Kay的格言：”简单的事情应该是简单的；复杂的事情应该是可能的”。为了做到这一点，有时有必要以不常见的事物更难为代价，使常见的事物变得简单。简洁性，就像一致性一样，不是一个明确的原则。</p><ol><li>使一个系统显得简单的方法之一是使其统一和一致，正如我们前面讨论的那样。</li><li>另一个实现简单的方法是尽量减少系统中的冗余度。有两种或更多的方法来做一件事会增加复杂性，而不会增加能力。</li></ol><p>一般来说，最好是引入新的通用机制，让 “专家 “可以获得加速器，而不是增加很多特殊的、只有一个用途的功能。Star的机制将在下面的 “用户可定制性 “中讨论。</p><h3 id="modeless-interaction"><a href="#modeless-interaction" class="headerlink" title="modeless interaction"></a>modeless interaction</h3><p>Star使用的一些光标形状来表示系统的状态</p><p>传统的交互式太过于强烈。文件的全部内容都被字母 “t “所取代。这说明了一个问题，也许是太强烈了，模式应该被谨慎地引入用户界面，如果有的话。</p><h3 id="Usr-Tailorability"><a href="#Usr-Tailorability" class="headerlink" title="Usr Tailorability"></a>Usr Tailorability</h3><p>无论一个系统有多么普遍或强大，它都不会满足所有的潜在用户。人们总是希望有办法加快经常执行的操作的速度。然而，每个人都是不同的。唯一的解决办法是在设计系统时，将用户可扩展性的规定内置其中。以下是Star提供的机制。</p><pre><code class="hljs">你可以通过各种方式定制你的系统的外观。最简单的是选择你想在桌面上使用的图标，从而定制你的工作环境。在更复杂的层面上，可以购买带有或不带有某些功能的工作站。例如，不是每个人都想拥有方程式设施。施乐公司将此称为 &quot;产品保理&quot;。</code></pre><p>你可以用文本、段落和页面布局的默认值来设置空白文件。</p><p>你可以通过改变文件抽屉和文件夹的分类顺序来定制你的归档系统。</p><p>你可以通过定义任何数量的 “视图 “或它们来定制你的记录文件。</p><p>你可以通过用CUStomer编程语言CUSP编写程序来定义 “元操作”。</p><p>每个用户都有一个用于识别系统的唯一名称，通常是用户的全名。</p><h3 id="summary"><a href="#summary" class="headerlink" title="summary"></a>summary</h3><p>在20世纪80年代，影响计算机使用普及程度的最重要因素将是降低成本、增加功能、改善可用性和服务，以及也许是最重要的，用户界面设计方面的进展。仅仅前三个因素是必要的，但还不足以实现广泛的使用。降低成本可以使人们购买计算机，但改进的用户界面可以使人们使用计算机。在这篇文章中，我们提出了一些原则和技术，希望能带来更好的用户界面。</p><p>用户界面设计仍然是一门艺术，而不是一门科学。在Star的设计过程中，很多时候我们都对用户界面问题的深度和微妙性感到惊讶，甚至连一致性和简单性这样所谓的直接问题也是如此。通常没有一个 “正确 “的答案。很多时候，没有科学的证据来支持一种选择而不是另一种，只有直觉。几乎总是存在着权衡。也许在这十年结束时，用户界面设计将成为一个更加严格的过程。我们希望我们已经为这个进步做出了贡献。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>graphic 4-5</title>
    <link href="/2022/11/03/graphic-4-5/"/>
    <url>/2022/11/03/graphic-4-5/</url>
    
    <content type="html"><![CDATA[<h1 id="simulation"><a href="#simulation" class="headerlink" title="simulation"></a>simulation</h1><h2 id="rigid-body-simulation"><a href="#rigid-body-simulation" class="headerlink" title="rigid body simulation"></a>rigid body simulation</h2><h4 id="6DOF"><a href="#6DOF" class="headerlink" title="6DOF"></a>6DOF</h4><p> 3个用于物体中心点的xyz轴，3个用于xyz三个轴的旋转角度</p><h4 id="常见词汇"><a href="#常见词汇" class="headerlink" title="常见词汇"></a>常见词汇</h4><ul><li>Force and torque: 力与扭力</li><li>Impulse-based collisions: 计算速度用的动量</li><li>Rest in contact: 碰撞过程中需要等待一下</li><li>Stacking: 两个物体之间如果任何一个物体收到很小的影响，物体之间发生了变化</li></ul><h2 id="articulated-（关节）"><a href="#articulated-（关节）" class="headerlink" title="articulated （关节）"></a>articulated （关节）</h2><p>articulated rigid body simulation</p><p>两块骨头&#x2F;中间链接的部分叫做： joint constraint</p><p>原本两块骨头分别6个DOF。但可以通过以下两种方式减少DOF。</p><ol><li>由于链接，在一个面，所以关节处-2个rotate。</li><li>因为链接，一个物体必定在另一个末端，所以关节-3个坐标点。</li></ol><p>总体来说12-5 &#x3D; 7 个。</p><p>例子： 人的骨头，车的轮子。。。etc</p><h2 id="Finite-Element-Method-FEM"><a href="#Finite-Element-Method-FEM" class="headerlink" title="Finite Element Method (FEM)"></a>Finite Element Method (FEM)</h2><p>一个模型，处理受损物体的。</p><p>Tetrahedralization(四面体)</p><p>把物体变成很多四面体。</p><p>rest shape。  deformed shape。</p><p>deformed shape 可以通过 FEM 变成rest shape。</p><h2 id="一些方法"><a href="#一些方法" class="headerlink" title="一些方法"></a>一些方法</h2><p>Mass-Spring System.</p><p>Particle-Based Fluid Simulation.</p><p>Grid-Based Fluid Simulation.</p><p>Hybrid Fluid Simulation.</p><h1 id="Collisions"><a href="#Collisions" class="headerlink" title="Collisions"></a>Collisions</h1><p>position velocity age color.</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>算法-笔记3</title>
    <link href="/2022/10/09/%E7%AE%97%E6%B3%95-%E7%AC%94%E8%AE%B03/"/>
    <url>/2022/10/09/%E7%AE%97%E6%B3%95-%E7%AC%94%E8%AE%B03/</url>
    
    <content type="html"><![CDATA[<h1 id="flow-network"><a href="#flow-network" class="headerlink" title="flow network"></a>flow network</h1><center><img src="/2022/10/09/%E7%AE%97%E6%B3%95-%E7%AC%94%E8%AE%B03/1.jpeg" width="400" height="200"> <br></center><p>The quantity f (e) is called the flow of edge e.</p><center><img src="/2022/10/09/%E7%AE%97%E6%B3%95-%E7%AC%94%E8%AE%B03/2.jpeg" width="400" height="200"> <br></center><h4 id="flow"><a href="#flow" class="headerlink" title="flow"></a>flow</h4><center><img src="/2022/10/09/%E7%AE%97%E6%B3%95-%E7%AC%94%E8%AE%B03/3.jpeg" width="400" height="200"> <br></center><ol><li>除了s和t，所有的节点进入等于出去，比如 v3： 1+2+1 &#x3D; 2 + 2 </li><li>[f]&#x3D;10的意思就是s发出了10，t接受了10。</li></ol><h4 id="maximum-flow"><a href="#maximum-flow" class="headerlink" title="maximum flow"></a>maximum flow</h4><center><img src="/2022/10/09/%E7%AE%97%E6%B3%95-%E7%AC%94%E8%AE%B03/4.jpeg" width="400" height="200"> <br></center><p>这种使用flow network 更加有效率。</p><h2 id="cut"><a href="#cut" class="headerlink" title="cut"></a>cut</h2><h2 id="Ford-Fulkerson-algorithm"><a href="#Ford-Fulkerson-algorithm" class="headerlink" title="Ford-Fulkerson algorithm"></a>Ford-Fulkerson algorithm</h2><p>求解maximum flow的方法。采用了贪婪。但只采用贪婪得不到最优解，会在图右边堵住。</p><ul><li>优化方法：把边（无论满没满）往两侧推，推到那些有空余的边上。也就是： 可以在有剩余容量的边上正向增加，并在已经承载了流量的边上反向增加，以将其分流到不同的方向。</li></ul><center><img src="/2022/10/09/%E7%AE%97%E6%B3%95-%E7%AC%94%E8%AE%B03/5.jpeg" width="400" height="200"> <br></center><h2 id="Maximum-Bipartite-Matching"><a href="#Maximum-Bipartite-Matching" class="headerlink" title="Maximum Bipartite Matching"></a>Maximum Bipartite Matching</h2><p>一个两个集合一一对应的图。</p><center><img src="/2022/10/09/%E7%AE%97%E6%B3%95-%E7%AC%94%E8%AE%B03/6.jpeg" width="400" height="200"> <br></center>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>ux</title>
    <link href="/2022/10/09/ux/"/>
    <url>/2022/10/09/ux/</url>
    
    <content type="html"><![CDATA[<h1 id="week-3"><a href="#week-3" class="headerlink" title="week 3"></a>week 3</h1><p>参与收集数据以形成对系统或界面应该如何工作的理解。不管个人项目的重点是什么，用户体验专家主要关注的是人以及他们与计算系统的互动方式。</p><p>理解人类如何接受信息、理解并从这些信息中学习，并利用这些信息来指导他们对外界的控制，是理解人类经验的关键[Weinschenk, 2011]（见图中的PET扫描：葡萄糖代谢的PET研究）。在这里，我们并不直接关注这些过程的解剖学、生理学或心理学方面（有许多深入的论述涉及这些领域），而是从用户与软件或设备的结合点来看待它们。在这种情况下，我们可以简单地认为，人类感觉和感知外部环境（系统或界面），处理和存储这些知识，直接或在未来使用这些知识。此外，基于过去和当前的知识，对外部环境（同样，在这种情况下，系统或界面）施加控制[Bear等人，2007]。</p><h2 id="Inattention-blindness-amp-amp-attention-blindness"><a href="#Inattention-blindness-amp-amp-attention-blindness" class="headerlink" title="Inattention blindness &amp;&amp; attention blindness"></a>Inattention blindness &amp;&amp; attention blindness</h2><p>那么，这个现象只是理解用户、他们的感知和他们的注意力所涉及的复杂性的一个例子。这种现象被称为 “注意力盲”、”注意盲 “或 “感知盲”，与我们的期望、感知和注意力的位置有关。简单地说，”不注意盲 “描述的是我们注意到在明处且已被看到的东西的能力。这通常发生在我们不期望刺激物发生的时候–为什么大猩猩会在篮球比赛中进行月球漫步？如果我们认为它不应该在那里，我们的大脑就会通过不在认知上登记该刺激物来补偿知觉输入。然而，有很多其他的测试也显示了这种现象。此外，对于为什么会出现这种现象，也有一些不同的解释。正如你刚刚读到的，我更喜欢 “期望 “的解释，但其他人建议：显眼性，刺激物可能是不显眼的，因此不被视为重要。心理负荷，我们可能忙于关注另一项任务而没有注意到一个刺激，或者说这确实是注意力位置的解释；正如我们将在后面看到的。在现实中，我希望每一种解释都有一些组合在起作用，但问题是，这种现象本身并不是我们所期望的，而且我们并不确切知道它为什么或如何发生。当你阅读更多的内容，当你开始在用户体验领域工作时，请记住这种不确定性的程度。</p><h2 id="visual-channel"><a href="#visual-channel" class="headerlink" title="visual channel"></a>visual channel</h2><p>视觉交互设计是由界面上的元素或细节的安排决定的，这些元素或细节可以通过现有的资源促进或阻碍用户。这是因为界面内到达我们眼睛的信息量远远大于我们的大脑所能处理的信息量，正是由于这个原因，视觉通道，也就是视觉注意力是好设计的关键。</p><p>通过对视觉通道的理解，我们可以看到与视觉设计相关的颗粒度的水平。这种颗粒度使我们能够通过分割成更小的、更容易管理的片段或组件来理解一个大的视觉效果图。我们的注意力根据我们的视觉注意力与这些组件的关系在这些组件之间移动，正是这种关于视觉通道如何运作的知识，作为设计的最佳实践，使设计师能够建立起用户觉得有趣和容易使用的界面。设计师为观察者建立的视觉叙事是由每个视觉组件的视觉外观（以及，因此，吸引力）暗中创造的。观察者的注意力，或者说我们将看到的注意力的位置，使得这种视觉叙事能够被讲述。</p><h4 id="Selective-visual-attention"><a href="#Selective-visual-attention" class="headerlink" title="Selective visual attention"></a>Selective visual attention</h4><p>由大脑中的意识和潜意识过程组成，用来快速有效地寻找和关注相关信息。有两个一般的视觉注意过程，即自下而上和自上而下，它们决定了人类下一步将注意力放在哪里。自下而上的视觉注意模型表明，低层次的突出特征，如对比度、大小、形状、颜色和亮度与视觉兴趣有很大的关联。例如，一个红苹果（营养的来源）在视觉上比它周围的绿叶更突出，因此也更有吸引力。另一方面，自上而下的模型解释了由语义或关于环境的知识驱动的视觉搜索：例如，当被要求描述图片中一个人的情绪时，人们会自动看向这个人的脸。</p><h4 id="Bottom-up-processing"><a href="#Bottom-up-processing" class="headerlink" title="Bottom-up processing"></a>Bottom-up processing</h4><p>自下而上的处理方式使人们能够迅速地发现一些项目，如粗体字和图片，这有助于解释界面的组织方式。它还能帮助人们将信息分为 “部分”，如文本块、标题和菜单。</p><h4 id="Top-down-processing"><a href="#Top-down-processing" class="headerlink" title="Top-down processing"></a>Top-down processing</h4><p>自上而下的处理方法使人们能够利用已有的知识和启发式方法来解释信息。例如，人们可能会在界面的顶部和两侧寻找菜单，而在中间寻找主要的界面组件。</p><h4 id="gaze-hotspots"><a href="#gaze-hotspots" class="headerlink" title="gaze hotspots"></a>gaze hotspots</h4><p>从眼动研究中可以看出，用户的注意力会依次集中在界面的不同部分，计算机图形学中已经成功地采用了计算模型，将图像分割成用户最可能关注的区域。这些模型是基于对人类视觉行为的了解和对有关图像的理解。事实上，有一些研究记录了用户在特定的交互任务中的眼球运动，以找出界面设计中那些被访问的特征，其顺序和 “凝视热点 “被发现的地方。在这些数据中，我们可以看到界面组件和眼睛注视之间的关联，但不是 “用户看了视觉上最明显的界面特征 “这样简单。事实上，有时候，在一个吸引人注意的特征（如图片）旁边的大字体也会被固定下来。然而，我们可以推断出，比如说，一些文字中的信息本身可能并不能吸引用户的注意力，但最好是附近有一些特征可以吸引用户的注意力。这一观点得到了其他研究的支持，这些研究试图建立界面设计指标来预测一个界面在视觉上是否复杂。这些研究与界面设计的复杂性有关，解释了交互被感知的方式取决于界面本身的设计方式和所使用的组件。</p><h2 id="Auditory-channel"><a href="#Auditory-channel" class="headerlink" title="Auditory channel"></a>Auditory channel</h2><p>听觉渠道是信息输入的第二大渠道，与视觉渠道高度相关，然而，听觉输入有一些经常被忽视的优势。例如，在某些情况下，对听觉刺激的反应要比对视觉刺激的反应快。其次，使用听觉信息可以在一定程度上减少屏幕上的视觉信息量。在某种程度上，这减少了来自界面组件和目前正在进行的交互方面的可能的信息过载。视觉需求的减少意味着注意力可以被释放到最好的视觉处理的刺激上，也意味着听觉刺激可以被定制到最适合的互动部分。</p><h4 id="drawback-of-auditory-channel-and-solution"><a href="#drawback-of-auditory-channel-and-solution" class="headerlink" title="drawback of auditory channel and solution"></a>drawback of auditory channel and solution</h4><p>事实上，与标准的界面组件相比，听觉通道往往使用不足。在某些情况下，这是由于需要在环境中不存在噪音污染的缘故。我们可以看到，在同一个大环境中，一致的声音或断断续续的声音往往会让计算机用户感到沮丧和分心；而对于可以专门针对主要用户的视觉刺激来说，情况并非如此。最后，在某些情况下最重要的是，声音可以移动用户的注意力，并将其集中到一个特定的空间位置。由于人类听觉处理系统的性质，研究发现，使用类似于白噪声的不同频率在吸引注意力方面是最有效的。这是因为人类的语言和交流是使用多种频率进行的，而单一频率的转换，如警报器或可听音调，不会使人感到不安，但更难在空间上定位。</p><h4 id="Earcons"><a href="#Earcons" class="headerlink" title="Earcons"></a>Earcons</h4><p>非语音听觉输入的一个更有趣的方面是听觉图标和 “Earcons”。目前，许多系统都有某种听觉图标，例如，从特定目录中删除文件时，往往伴随着用来表达删除的声音，如纸张被揉碎。耳朵图标稍微复杂一些，因为它们涉及到非语言音频信息的传输，向用户提供有关某种计算机对象、操作或互动的信息。与听觉图标相比，Earcons使用的是更传统的音乐方法，通常是由单独的短节奏序列构成，并以不同的方式组合。在这种情况下，听觉部分必须学习，因为Earcon和它所代表的内容之间没有直观的联系。</p><h2 id="Somatic"><a href="#Somatic" class="headerlink" title="Somatic"></a>Somatic</h2><p>体感一词涵盖了在环境中体验到的所有类型的物理接触，无论是感受表面的纹理还是力的冲击。触觉描述了用户在接触物体或其他用户时如何体验力或皮肤反馈。触觉交互可以作为提供输入和接收输出的手段，并被定义为 “个人通过使用其身体对其身体附近的世界的感受性”。触觉是由由覆盖在皮肤上的受体和大脑中的处理中心组成的各种感觉系统所产生的触觉刺激所驱动的，以产生触觉和温度等感觉模式。当感觉神经元被特定的刺激所触发时，神经元会传递到大脑中的一个区域，使经过处理的刺激在正确的位置被感觉到。因此，可以看出，使用触觉通道进行控制和反馈，特别是作为其他感官输入或输出的辅助手段，是很重要的。事实上，触觉和触觉的优势在于使互动看起来更真实，这也是触觉设备在虚拟和沉浸式环境中大量使用的原因。</p><h2 id="The-Olfactory-System"><a href="#The-Olfactory-System" class="headerlink" title="The Olfactory System"></a>The Olfactory System</h2><p>嗅觉系统使我们能够感觉到气味。因此，对于许多研究用户体验的人来说，可能会感到惊讶，因为已经有一些工作在研究使用气味作为一种与交互直接相关的感官输入形式（特别是来自[Brewster等人，2006]）。虽然这是一个研究不足的领域，但某些类型的界面可以使用气味来传达一个额外的支持成分，而不是一般的、更好理解的声音和视觉的刺激。嗅觉的主要好处之一是它与记忆有着密切的联系，在这种情况下，嗅觉可以被用来帮助用户找到他们已经去过的地点，或者在互动环境中认出他们已经去过的地点。事实上，似乎嗅觉和味觉[Narumi等人，2011]在与图像识别相关联时特别有效，并且可以以抽象的气味，或者代表特定线索的气味的形式存在。然而，作为一个UX’er，气味不太可能在你设计的系统中被大量使用，尽管如果你在用户忘记以前学过的交互方面有特别的问题时，记住气味可能是有用的。</p><h2 id="Explicit-and-Implicit-Communication"><a href="#Explicit-and-Implicit-Communication" class="headerlink" title="Explicit and Implicit Communication"></a>Explicit and Implicit Communication</h2><p>信息可以通过多种不同的方式传输，这些方式可以是隐式的（隐蔽的）或显式的（公开的）。在这种情况下，让我们将信息传输称为通信；将信息传达给用户，然后通过输入和控制机制将用户要求传回计算机。明确的交流通常被很好地理解，并且集中在文本和图像（或声音）的视觉或听觉传输以供用户消费。然而，隐式通信有点难以定义。在这种情况下，我指的是在某些方面是无形的视觉或听觉用户体验的那些方面。我的意思是诸如审美或情感反应 [Pelachaud, 2012] 等方面对交流的各个方面。</p><h4 id="explicit-commuication"><a href="#explicit-commuication" class="headerlink" title="explicit commuication"></a>explicit commuication</h4><p>沟通和复杂度密切相关，复杂度直接影响到用户和界面或系统之间沟通的便利性。沟通主要是通过界面的视觉布局和用户必须阅读的文字标签来进行的，以了解与他们的互动沟通。人们通过使用生硬的眼球运动（称为’Saccades’）来阅读文本，然后停止并固定在一个关键词上大约250毫秒。这些固定的动作各不相同，在更复杂的文本中持续的时间更长，而且集中在向前的固定上，当阅读变得更加困难时，倒退（向后）的固定只发生在10-15%的时间。人们在快速阅读时，通过扫描寻找适当的信息，往往固定的频率较低，时间较短。然而，他们只能记住所读信息的要点；而不能对所遇到的信息进行全面的论述（见图：视觉化文字）。这意味着，对于用户来说，在快速扫描一个互动功能时，对界面的全面描述并没有被用于用户的决策过程中。事实上，在浏览大型互动资源时，认知过载是一个关键问题。如果互动是非线性的，并且可能会意外地切换上下文，那么这种过载就会增加。通过摘要进行预览是提高用户在复杂界面中的认知的关键，但是复杂的提示也会使读者的不相干的信息过载。</p><h4 id="implicit-communication"><a href="#implicit-communication" class="headerlink" title="implicit communication"></a>implicit communication</h4><p>美学通常被定义为对美丽或愉悦的欣赏，但这个术语仍有争议。视觉美学是 “关于如何通过感官认识事物的科学”，指的是用户的感知和认知。具体来说，’美观的’界面通常被用来描述那些被用户认为是干净、清晰、有组织、漂亮和有趣的界面。这些术语只是描述美学的众多不同术语中的一个例子，这些术语在交互设计中普遍使用。人机交互工作大多强调性能标准，如学习时间、错误率和完成任务的时间，而较少关注美学。然而，用户体验工作试图扩大这种狭隘的（”还原论”）体验观，试图理解美学和情感如何影响观看者的感知–但是界面的美学表现和用户的交互之间的关系仍然没有被很好的理解。</p><p>最新的科学发现表明，情绪在决策、感知、学习等方面起着至关重要的作用–也就是说，它们影响着理性思维的机制。不仅是太多，而且太少的情绪都会损害决策[Picard, 1997]。这现在被称为 “情感计算”，其中生物识别仪器，如皮肤电泳反应（GSR），凝视分析和心率监测被用来通过用户的生理变化来确定其情感状态。此外，情感计算还寻求改变这些状态的方法，或者根据这些状态表现出对技术的控制。</p><h2 id="input-and-output"><a href="#input-and-output" class="headerlink" title="input and output"></a>input and output</h2><p>在讨论 UX 时，最后一个难题是输入信息以供计算机使用的能力。通常，这通常是通过使用与键盘和鼠标结合使用的 GUI 来完成的。然而，这还不是全部，确实有很多种入口设备可用于信息输入、选择和目标获取[Brand，1988]。在某些情况下，在其他凝视和眨眼检测中使用了专业设备，例如头部操作的鼠标，但是，在大多数情况下，鼠标和键盘将是事实上的组合。但是，作为 UX 工程师，您还应该了解可用的不同类型的设备以及它们之间的关系。通过这种方式，您将能够在指定非标准系统时做出准确和合适的选择。</p><h4 id="The-Written-word"><a href="#The-Written-word" class="headerlink" title="The Written word"></a>The Written word</h4><p>书面文字，草书，长期以来被视为将文本输入计算机系统的最自然方式。 因为它依赖于使用已经学过的技能。</p><h4 id="Pointing-Devices"><a href="#Pointing-Devices" class="headerlink" title="Pointing Devices"></a>Pointing Devices</h4><p>在大多数情况下，用于绘图和目标获取的指针设备由无处不在的鼠标处理。</p><h4 id="Text-entry"><a href="#Text-entry" class="headerlink" title="Text entry"></a>Text entry</h4><p>通过键盘输入文本是标准计算机系统的主要数据输入方式。</p><h4 id="Haptic-Interaction"><a href="#Haptic-Interaction" class="headerlink" title="Haptic Interaction"></a>Haptic Interaction</h4><p>触觉交互并没有在沉浸式或协作环境领域之外广泛使用。为了与虚拟世界进行触觉交互，</p><h4 id="Gesture-Recognition"><a href="#Gesture-Recognition" class="headerlink" title="Gesture Recognition"></a>Gesture Recognition</h4><p>手势识别最初被视为主要用于研究和学术调查的领域。然而，最近有两种产品改变了这种看法。其中第一个是流行的游戏机 Nintendo Wii，它使用游戏控制器作为手持指点设备，并检测三个维度的运动</p><h2 id="SUM-of-Week-3"><a href="#SUM-of-Week-3" class="headerlink" title="SUM of Week 3"></a>SUM of Week 3</h2><p>了解我们如何使用我们的感官：视觉（视觉通道）、听觉（听觉通道）、嗅觉（嗅觉通道）和触摸（触觉通道）使我们能够了解如何通过界面传达有关系统状态的信息。 对心灵自然过程的了解：注意力、记忆和学习、探索和导航、情感交流和复杂性以及美学，有助于理解我们传输的信息如何更好地适应用户的心理过程。 最后，了解输入和控制是如何制定的，可以让我们从多种输入设备中进行选择，这些输入设备可用于信息输入、选择和目标获取。 但是，我们必须记住，有许多不同类型的人，这些人有许多不同类型的感官或身体要求，在施工过程的各个阶段都必须考虑到这些要求。</p><h2 id="Digital-Phenotyping"><a href="#Digital-Phenotyping" class="headerlink" title="Digital Phenotyping"></a>Digital Phenotyping</h2><p>数字表型(Digital Phenotyping)是指 “利用个人数字设备（尤其是智能手机）的数据对个人层面的人类表型进行现场量化。</p><p>这些数据可以分为两个子组，即主动数据和被动数据，前者是指需要用户主动输入才能生成的数据，而被动数据，如传感器数据和手机使用模式，是在不需要用户主动参与的情况下收集的。</p><h2 id="User-Centred-Design"><a href="#User-Centred-Design" class="headerlink" title="User Centred Design"></a>User Centred Design</h2><p>在现实中，这意味着在开发任何软件之前都有一个很长的用户咨询期，这样设计者就可以更准确的表达这些用户的要求–”什么”。可以说，有许多不同的子风格，我现在称之为以用户为中心的设计（UCD），本节中列出的文本和标准是很好的第一步[9241-210:2010, 2010]。然而，有许多首要的问题和原则适合于它们，并且在某些方面可以不严格参照特定的UCD方法。作为一个训练有素的UX’er，你不应该死记硬背任何特定的方法，而是应该了解每一种方法的长处和短处，并在你目前的设计过程中选择最适合你具体要求的工具4。</p><h4 id="UCD-user-centred-design"><a href="#UCD-user-centred-design" class="headerlink" title="UCD (user centred design)"></a>UCD (user centred design)</h4><p>UCD代表了一套技术，使参与者能够在评估和设计过程中获得某种形式的所有权。人们通常认为，这些参与者在某种程度上对所调查的系统和过程有一定的了解，因此对整个组织所需要的系统和界面有一定的洞察力。UCD方法与 “大声思考 “协议密切相关，但不是完全专注于评估，而是鼓励用户根据他们对系统或界面的了解，扩大他们的观点，提出改进建议。事实上，我们鼓励参与者对提议的系统进行批评，以达到真正的要求。这意味着–在某些情况下–在用户体验设计开始之前就已经创建了一个系统设计，以便参与者有一个起点。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>game_note</title>
    <link href="/2022/10/05/game-note/"/>
    <url>/2022/10/05/game-note/</url>
    
    <content type="html"><![CDATA[<h1 id="Lecture-3"><a href="#Lecture-3" class="headerlink" title="Lecture 3"></a>Lecture 3</h1><h2 id="Definition-2"><a href="#Definition-2" class="headerlink" title="Definition 2"></a>Definition 2</h2><ol><li>game of perfect information: 一个抉择树每个节点都有一个条件。也就是说任意玩家在任意时间都知道自己所在的位置。反之则是imperfect information。</li><li>zero-sum: 每一个叶子上所有用户的总和payoff是0。也就是说用户不会从中得到什么。</li><li>without chance： 节点没有被自然控制。 反之是game with chance。</li></ol><p>ep: 棋类是 2-person zero-sum games of perfect information without chance.<br>ep: Poker is a zero-sum1 game of imperfect information with chance.</p><h2 id="Definition-3"><a href="#Definition-3" class="headerlink" title="Definition 3"></a>Definition 3</h2><p>fully specified strategy : 对一个特定的玩家，有多少种战略。把所有可能性走法加起来。</p><h4 id="Generating-all-strategies-for"><a href="#Generating-all-strategies-for" class="headerlink" title="Generating all strategies for"></a>Generating all strategies for</h4><ul><li><p>如果玩家i第一步先走的话： Ni(t) &#x3D; Ni(t1) + Ni(t2) + · · · + Ni(tn).</p></li><li><p>如果玩家i第一步后走的话： Ni(t) &#x3D; Ni(t1) × Ni(t2) × · · · × Ni(tn).</p></li></ul><h1 id="week3"><a href="#week3" class="headerlink" title="week3"></a>week3</h1><h2 id="Nash-Equilibrium"><a href="#Nash-Equilibrium" class="headerlink" title="Nash Equilibrium"></a>Nash Equilibrium</h2><h4 id="Def"><a href="#Def" class="headerlink" title="Def"></a>Def</h4><p>Definition: A strategy profile (s1,s2,s3…sk) for a game with k<br>players, is a Nash equilibrium if each strategy is a best<br>response to all of the others.</p><ul><li>It is not a strategy; it is a choice of strategy for all players in<br>the game.</li><li>If the players are playing the Nash, no player has any<br>incentive to change its strategy unilaterally</li></ul><h2 id="Mini-max-approach"><a href="#Mini-max-approach" class="headerlink" title="Mini-max approach"></a>Mini-max approach</h2><center><img src="/2022/10/05/game-note/2.jpeg" width="400" height="200"> <br></center><center><img src="/2022/10/05/game-note/3.jpeg" width="400" height="200"> <br></center><p>解释上图： </p><ol><li>寻找Amelia的min ， 1，2，3，1</li><li>寻找Scott的max， 7，3，5，6</li><li>找Amelia的min中的max 和 Scott的max中的min 的那个点。</li></ol><h2 id="Dominance"><a href="#Dominance" class="headerlink" title="Dominance"></a>Dominance</h2><center><img src="/2022/10/05/game-note/4.jpeg" width="400" height="200"> <br></center><h2 id="Dominance-can-be-used-to-eliminate-some-strategies"><a href="#Dominance-can-be-used-to-eliminate-some-strategies" class="headerlink" title="Dominance can be used to eliminate some strategies"></a>Dominance can be used to eliminate some strategies</h2><center><img src="/2022/10/05/game-note/5.jpeg" width="400" height="200"> <br></center><h2 id="mixed-strategies"><a href="#mixed-strategies" class="headerlink" title="mixed strategies"></a>mixed strategies</h2><p>A mixed strategy is a strategy for a player in which:</p><ul><li>I plays probabilistic combination of pure strategies;</li><li>I receives a probabilistic combination of payoffs</li></ul><h4 id="Extensive-form"><a href="#Extensive-form" class="headerlink" title="Extensive form"></a>Extensive form</h4><p>一个路径上有权重比例的树</p><p>At each node where the player has a<br>decision, assign a probability function to each<br>of the possible choices.</p><h4 id="con"><a href="#con" class="headerlink" title="con"></a>con</h4><ol><li>Only for a special class of games do strategies which beat<br>all opponents always exist (two-player, zero-sum, perfect<br>information, no chance).</li><li>A Nash equilibrium is a collection of strategies for all<br>players such that each player is playing best response to<br>all the others.</li><li>For a zero-sum, two-player game in normal form, a<br>strategy pair which is maximal in its columns and minimal<br>in its rows is a Nash equilibrium.</li><li>Dominance can be used to reduce the number of<br>strategies.</li><li>Nash equilibria also exist in general-sum games.</li></ol><h1 id="Week4"><a href="#Week4" class="headerlink" title="Week4"></a>Week4</h1><h2 id="The-minmax-rule"><a href="#The-minmax-rule" class="headerlink" title="The minmax rule"></a>The minmax rule</h2><p>• MAX nodes are trying to maximise the payoff to player 1.<br>• MIN nodes are trying to minimise the payoff to player 1.</p><p>The value V(J) of a node J is</p><ol><li>If J is a terminal node, V(J) is equal its payoff U(J).</li><li>If J is a MAX node, V(J) is the maximum value of its<br>children.</li><li>If J is a MIN node, V(J) is the minimum value of its<br>children.</li></ol><center><img src="/2022/10/05/game-note/1.jpeg" width="400" height="200"> <br></center><center><img src="/2022/10/05/game-note/2.jpeg" width="400" height="200"> <br></center><h3 id="suppose-multi-players"><a href="#suppose-multi-players" class="headerlink" title="suppose multi players"></a>suppose multi players</h3><p>Can not approach an equilibria : </p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>算法-笔记2</title>
    <link href="/2022/10/03/%E7%AE%97%E6%B3%95-%E7%AC%94%E8%AE%B02/"/>
    <url>/2022/10/03/%E7%AE%97%E6%B3%95-%E7%AC%94%E8%AE%B02/</url>
    
    <content type="html"><![CDATA[<h1 id="fast-and-slow"><a href="#fast-and-slow" class="headerlink" title="fast and slow"></a>fast and slow</h1><center><img src="/2022/10/03/%E7%AE%97%E6%B3%95-%E7%AC%94%E8%AE%B02/1.jpeg" width="400" height="200"> <br></center><center><img src="/2022/10/03/%E7%AE%97%E6%B3%95-%E7%AC%94%E8%AE%B02/2.jpeg" width="400" height="200"> <br></center><center><img src="/2022/10/03/%E7%AE%97%E6%B3%95-%E7%AC%94%E8%AE%B02/3.jpeg" width="400" height="200"> <br></center><p>n! —&gt; singly  </p><ul><li>2^n &lt;&#x3D; n &lt;&#x3D; 2^n^2</li></ul><center><img src="/2022/10/03/%E7%AE%97%E6%B3%95-%E7%AC%94%E8%AE%B02/4.jpeg" width="400" height="200"> <br></center><h1 id="Ackermann-Function"><a href="#Ackermann-Function" class="headerlink" title="Ackermann Function"></a>Ackermann Function</h1><p>用来描述递归时间复杂度的方程。</p><center><img src="/2022/10/03/%E7%AE%97%E6%B3%95-%E7%AC%94%E8%AE%B02/5.jpeg" width="400" height="200"> <br></center><p>k-fold就是在表示递归，下图描述的更加直观。</p><center><img src="/2022/10/03/%E7%AE%97%E6%B3%95-%E7%AC%94%E8%AE%B02/7.jpeg" width="400" height="200"> <br></center><p>注意A3是大于等于，要推到A2才能算出精确值</p><center><img src="/2022/10/03/%E7%AE%97%E6%B3%95-%E7%AC%94%E8%AE%B02/6.jpeg" width="400" height="200"> <br></center><p>上面的推导过程</p><center><img src="/2022/10/03/%E7%AE%97%E6%B3%95-%E7%AC%94%E8%AE%B02/8.jpeg" width="400" height="200"> <br></center><h1 id="String"><a href="#String" class="headerlink" title="String"></a>String</h1><h4 id="The-Pattern-Matching-Problem"><a href="#The-Pattern-Matching-Problem" class="headerlink" title="The Pattern Matching Problem"></a>The Pattern Matching Problem</h4><p>找子字符串</p><p>Example 23.1: Suppose we are given the text string<br>T &#x3D; “abacaabaccabacabaabb”<br>and the pattern string P &#x3D; “abacab”<br>Then P is a substring of T . Namely, P &#x3D; T [10..15].</p><p>Σ :  alphabet</p><h2 id="Brute-Force-Pattern-Matching"><a href="#Brute-Force-Pattern-Matching" class="headerlink" title="Brute-Force Pattern Matching"></a>Brute-Force Pattern Matching</h2><p>暴力遍解 也叫 naive algorithm </p><p>Running time O(T*P)</p><p>T P 一个substring 一个 string</p><h2 id="Rabin-Karp-algorithm"><a href="#Rabin-Karp-algorithm" class="headerlink" title="Rabin-Karp algorithm"></a>Rabin-Karp algorithm</h2><p>先check substring的numbers 再check它是否匹配。</p><p>Worst-case Running time O(T*P)</p><p>O(n+m+m(n&#x2F;q))</p><ul><li>q: modulo (always prime)</li></ul><h2 id="The-Boyer-Moore-Algorithm"><a href="#The-Boyer-Moore-Algorithm" class="headerlink" title="The Boyer-Moore Algorithm"></a>The Boyer-Moore Algorithm</h2><p>相比于暴力遍解，只需要加两个启发式。</p><ul><li><p>Looking-Glass Heuristic: 当第一个字节匹配，我们也同时检测最后一个substring是否匹配。</p></li><li><p>Character-Jump Heuristic: 如果string中有一个字符substring都不存在，直接跳到这个字符串后面。</p></li></ul><h4 id="Worst-Case-Analysis-of-the-Boyer-Moore-Algorithm"><a href="#Worst-Case-Analysis-of-the-Boyer-Moore-Algorithm" class="headerlink" title="Worst-Case Analysis of the Boyer-Moore Algorithm"></a>Worst-Case Analysis of the Boyer-Moore Algorithm</h4><p>The worst-case running time of the BM algorithm is O(nm + |Σ|). Namely, the computation of the last function takes time O(m + |Σ|) and the actual search for the pattern takes O(nm) time in the worst case, the same as the brute-force algorithm. An example of a text-pattern pair that achieves the worst case is</p><center><img src="/2022/10/03/%E7%AE%97%E6%B3%95-%E7%AC%94%E8%AE%B02/9.jpeg" width="400" height="200"> <br></center><p>这个方法的shift不是很好。所以有下面方法。</p><h2 id="Knuth-Morris-Pratt-Algorithm"><a href="#Knuth-Morris-Pratt-Algorithm" class="headerlink" title="Knuth-Morris-Pratt Algorithm"></a>Knuth-Morris-Pratt Algorithm</h2><p>KMP 是线性复杂度。</p><p>longest prefix of the good prefix is also a proper suffix of the good prefix 。</p><p>增添回溯的Boyer-Moore Algorithm。不像之前一个个字符的判断。而类似于贪婪，检测substring和string的匹配关系直到遇到不匹配的字符。通过咨询失败函数来判断新的索引。</p><center><img src="/2022/10/03/%E7%AE%97%E6%B3%95-%E7%AC%94%E8%AE%B02/10.jpeg" width="400" height="200"> <br></center><h4 id="compute-π："><a href="#compute-π：" class="headerlink" title="compute π："></a>compute π：</h4><p> Using a similar reasoning, the running time of compute-π(P)<br>is O(|P|).</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java">begin naiveCompute-π(P)<br>π(<span class="hljs-number">0</span>) ← <span class="hljs-number">0</span><br><span class="hljs-type">for</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span> to |P| − <span class="hljs-number">1</span><br>π(i) ← −<span class="hljs-number">1</span> <br><span class="hljs-type">for</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span> to |P| − <span class="hljs-number">1</span><br>j ← <span class="hljs-number">0</span><br><span class="hljs-keyword">while</span> i + j &lt; |P| and P[i + j] = P[j]<br><span class="hljs-keyword">if</span> π(i + j) = −<span class="hljs-number">1</span><br>π(i + j) ← j + <span class="hljs-number">1</span><br><span class="hljs-type">if</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span><br>π(i) ← <span class="hljs-number">0</span><br>j ← j + <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h4 id="remove-unnecessary-shifts"><a href="#remove-unnecessary-shifts" class="headerlink" title="remove unnecessary shifts"></a>remove unnecessary shifts</h4><center><img src="/2022/10/03/%E7%AE%97%E6%B3%95-%E7%AC%94%E8%AE%B02/11.jpeg" width="400" height="200"> <br></center><p>better: </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java">begin naiveCompute-π(P)<br>π(<span class="hljs-number">0</span>) ← <span class="hljs-number">0</span><br><span class="hljs-type">for</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span> to |P| − <span class="hljs-number">1</span><br>π(i) ← −<span class="hljs-number">1</span><br>i ← <span class="hljs-number">1</span><br>j ← <span class="hljs-number">0</span><br><span class="hljs-keyword">while</span> i &lt; |P|<br><span class="hljs-keyword">while</span> i + j &lt; |P| and P[i + j] = P[j]<br><span class="hljs-keyword">if</span> π(i + j) = −<span class="hljs-number">1</span> <span class="hljs-comment">// match</span><br>π(i + j) ← j + <span class="hljs-number">1</span><br>j ← j + <span class="hljs-number">1</span><br><span class="hljs-keyword">if</span> j &gt; <span class="hljs-number">0</span> <span class="hljs-comment">// mismatch</span><br>i ← i + j − π(j); j ← π(j)  <br><span class="hljs-keyword">else</span><br>π(i) ← <span class="hljs-number">0</span>; i ← i + <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>线性复杂度的原因是在循环之中不是 i 就是i+j increases。</p><p>The running time of KMP(T,P) (ignoring the construction of π is O(|T|).</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>NeRF论文总结</title>
    <link href="/2022/10/03/NeRF%E8%AE%BA%E6%96%87%E6%80%BB%E7%BB%93/"/>
    <url>/2022/10/03/NeRF%E8%AE%BA%E6%96%87%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<h1 id="1"><a href="#1" class="headerlink" title="1"></a>1</h1><p>NeRF: Representing Scenes<br>as Neural Radiance Fields<br>for View Synthesis</p><h3 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h3><p>通过优化底层的连续体积场景函数来合成复杂场景的新视图。</p><p>在这项工作中，我们以新的方式解决了长期存在的视图合成问题。</p><ul><li>视图合成是指从一组给定的输入图中渲染场景的新视图的问题和它们各自的相机姿势来渲染场景的新视图。从新的视角产生逼真的输出需要正确处理复杂的几何形状和材料反射属性。</li></ul><p>之前提及过很多方案，但这是第一次实现。</p><h4 id="结果："><a href="#结果：" class="headerlink" title="结果："></a>结果：</h4><p> 提出了第一个continuous neural scene(连续的神经场景表征)，能够从在自然环境中捕获的RGB图像中呈现出高分辨率的逼真的真实物体和场景的新观点。自然环境中捕获的RGB图像，呈现出真实物体和场景的高清晰度的新观点。</p><h4 id="怎么做："><a href="#怎么做：" class="headerlink" title="怎么做："></a>怎么做：</h4><p>我们将一个静态场景表示为一个连续的5D函数输出每个方向(θ, φ)上的辐射度。在空间的每个点（x，y，z）的辐射度，以及每个点的密度。在每一点上的密度就像一个不透明度，它控制着通过(x, y, z)的光线所积累的辐射量。<br>我们的方法优化了一个没有任何卷积层的深度全连接神经网络通过回归来表示这个函数。<br>从一个单一的5D坐标（x，y，z，θ，φ）到一个单一的体积密度和取决于视图的RGB颜色。</p><p>为了生成一个特定视角的NERF。做法以下步骤：</p><ol><li>将相机光线穿过场景，生成一个采样后的神经辐射场。</li><li>使用这些点和它们相应的2D viewing directions 作为神经网络的输入，产生一组颜色和密度的输出。这些密度累积起来也就是一个视角的二维图像。</li><li>因为有些观测不到，所以优化。用梯度下降法。</li><li>神经网络模型并没有收敛到我们想要的分辨率。我们通过对输入的5D坐标进行位置编码来解决这个问题，从而使MLP能够表示更高的频率函数。</li></ol><p>note: 后两点是在模型提出之后作者引用自己在reference 13 中进行对神经网络场的改进。</p><h4 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h4><p>其输入是一个单一的连续5D坐标:</p><ul><li>(spatial location (x, y, z) and viewing direction (θ, φ))</li><li>换句话说也就是一组已知相机姿态的图像和摄像机的位置</li></ul><h4 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h4><p>其输出是体积密度和视图。</p><h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p>通过沿相机射线查询5D坐标来合成视图，并使用经典的体积渲染技术来投射输出。</p><p>描述了如何有效地优化神经辐射场来渲染具有复杂几何和外观的场景的逼真的新观点。<br>描述了如何有效地优化neural radiance fields，以呈现具有复杂几何形状和外观的场景的逼真的新观点。</p><p>和其他现代模型进行比较</p><ol><li>[SRN] 几何深度学习通常需要明确的三维监督。新兴的神经场景表征只能用摆放的二维图像进行训练，但现有的方法忽略了场景的三维结构。<br>提出了场景表征网络（SRNs），这是一种连续的、具有三维结构意识的场景表征，对几何和外观都进行编码。SRNs将场景表示为连续的函数，将世界坐标映射到局部场景属性的特征表示。SRNs可以仅从二维图像及其相机姿势中进行端到端的训练，而不需要访问深度或形状。</li></ol><ul><li>与之前的变化： SRNs可以仅从二维图像及其相机姿势中进行端到端的训练，而不需要访问深度或形状。</li></ul><ol start="2"><li>[NV] 我们规避了这些困难，提出了一种基于学习的方法来表示动态物体，其灵感来自于断层成像中使用的整体投影模型<br>该方法是在多视角捕捉环境中直接从二维图像中监督出来的，不需要对物体进行明确的重建或跟踪。</li></ol><ul><li>比较新兴的点： 为了克服基于体素的表征的内存限制，我们在射线行进过程中学习了一个用翘曲场实现的动态不规则网格结构。</li></ul><ol start="3"><li>[LLFF] 首先将每个取样视图扩展到 首先通过多平面图像(MPI)场景将每个取样的视图扩展成一个局部光场。表示，然后通过混合相邻的局部光场来渲染新的视图。用户可以自定义调节需要对图像的采样率。</li></ol><ul><li>扩展了传统的全光采样理论，得出了一个界限，精确地规定了用户在使用我们的算法时应该对一个给定场景的视图进行多么密集的采样。</li></ul><center><img src="/2022/10/03/NeRF%E8%AE%BA%E6%96%87%E6%80%BB%E7%BB%93/1.jpeg" width="400" height="200"> <br></center><h4 id="用基于物理的渲染器生成的新合成数据集的场景在测试集上的比较"><a href="#用基于物理的渲染器生成的新合成数据集的场景在测试集上的比较" class="headerlink" title="用基于物理的渲染器生成的新合成数据集的场景在测试集上的比较"></a>用基于物理的渲染器生成的新合成数据集的场景在测试集上的比较</h4><p>能够恢复几何和外观上的细节，如船舶的索具、乐高的齿轮和踏板、麦克风的闪亮支架。</p><ul><li>LLFF在麦克风支架和材料的物体边缘出现了带状伪影。</li><li>SRN在任何情况下都会产生模糊和失真的渲染。</li><li>NV不能捕捉到麦克风格栅或乐高齿轮上的细节。</li></ul><center><img src="/2022/10/03/NeRF%E8%AE%BA%E6%96%87%E6%80%BB%E7%BB%93/2.jpeg" width="400" height="200"> <br></center><h4 id="对真实世界场景的测试集视图的比较"><a href="#对真实世界场景的测试集视图的比较" class="headerlink" title="对真实世界场景的测试集视图的比较"></a>对真实世界场景的测试集视图的比较</h4><ul><li>比LLFF更一致地表现精细的几何形状，如Fern的叶子所示<br>以及T-rex中的骨架肋骨和栏杆。</li><li>SRN捕捉到的是低频几何和颜色变化，但却无法再现任何精细的细节。</li></ul> <center><img src="/2022/10/03/NeRF%E8%AE%BA%E6%96%87%E6%80%BB%E7%BB%93/3.jpeg" width="400" height="200"> <br></center><h3 id="OPTIMIZING-A-NEURAL-RADIANCE-FIELD"><a href="#OPTIMIZING-A-NEURAL-RADIANCE-FIELD" class="headerlink" title="OPTIMIZING A NEURAL RADIANCE FIELD"></a>OPTIMIZING A NEURAL RADIANCE FIELD</h3><p>第一个改进是对输入坐标进行位置编码。<br>输入坐标的位置编码，协助MLP表示高频函数。第二项是一个分层采样</p><h3 id="结果-1"><a href="#结果-1" class="headerlink" title="结果"></a>结果</h3><p>我们的工作直接解决了先前工作中的不足之处，即使用MLP来表示物体和场景的连续性。使用MLPs来表示物体和场景的连续函数。我们证明了将场景作为5D神经辐射场产生更好的效果。产生了比以前主流的训练深度CNN的方法更好的渲染。</p><h1 id="2"><a href="#2" class="headerlink" title="2"></a>2</h1><p>UNISURF: Unifying Neural Implicit Surfaces and<br>Radiance Fields for Multi-View Reconstruction</p><h3 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h3><p>NeRF的估计体积密度不允许精确的表面重建。我们的关键见解是，隐含的表面模型和辐射度场可以以统一的方式制定，从而可以使用同一模型进行表面和体积渲染。这种统一的观点使新的、更有效的采样程序成为可能，并且能够在没有输入掩码的情况下重建准确的表面。</p><h3 id="结果-2"><a href="#结果-2" class="headerlink" title="结果"></a>结果</h3><p>在重建质量方面优于NeRF，同时 在不需要equiring mask的情况下，表现与IDR相当。</p><p>我们提出了UNISURF（UNIfied Neural Implicit SUrface and Radiance Fields）一个原则性的隐含表面和辐射场的统一框架，其目标是从一组RGB图像中重建实体。我们的框架结合了曲面渲染和体积渲染的优点。重点是不需要equiring mask且表现不错。</p><p>note： 注意是实体</p><h3 id="IDR"><a href="#IDR" class="headerlink" title="IDR"></a>IDR</h3><p>引入了一个神经网络架构，它同时学习未知的几何体、相机参数和一个神经渲染器，该渲染器近似于从表面反射到相机的光线。几何图形被表示为a zero level-set of a neural network，而从渲染方程中导出的神经渲染器能够对广泛的照明条件和材料进行建模。我们在DTU MVS数据集中具有不同材料属性、照明条件和噪声相机初始化的物体的真实世界二维图像上训练我们的网络。我们发现我们的模型能够产生具有高保真度、高分辨率和细节的最先进的三维表面重建。</p><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><p>。相对于NeRF也适用于非实体场景我们把重点限制在可以由三维表面和视线相关的表面颜色表示的实体物体上。<br>由三维表面和视线相关的表面颜色来表示。我们的方法既利用了体积辐射表征的力量来学习粗略的场景结构，又利用了表面渲染的力量来学习粗略的场景结构。作为一种归纳偏见，用一组精确的三维表面来表示物体，从而导致精确的重建</p><h3 id="结果-3"><a href="#结果-3" class="headerlink" title="结果"></a>结果</h3><p>无需输入掩码。作者认为，神经隐含曲面和先进的可微分渲染程序在未来的三维重建方法中发挥着关键作用。我们统一的表明了在一个比以前更普遍的环境中优化隐含曲面的路径。<br>模型只限于表示实体。此外，在图像中很少可见的区域，重建的准确性较低。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Specular Reflection from Woven Cloth 论文总结</title>
    <link href="/2022/09/29/Specular-Reflection-from-Woven-Cloth%E8%AE%BA%E6%96%87%E6%80%BB%E7%BB%93/"/>
    <url>/2022/09/29/Specular-Reflection-from-Woven-Cloth%E8%AE%BA%E6%96%87%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<h1 id="1-这篇文章干了啥"><a href="#1-这篇文章干了啥" class="headerlink" title="1.这篇文章干了啥"></a>1.这篇文章干了啥</h1><p>特定织物的外观是由大尺度反射率和小尺度纹理的变化产生的，因为整个表面的观察角度和光照角度都在变化。</p><p>This article presents a study of the reflectance and texture of woven cloth that aims to identify and model im- portant optical features of cloth appearance. </p><ol><li>New measurements are reported for a range of fabrics including natural and synthetic fibers as well as staple and filament yarns.</li><li>A new scattering model for woven cloth is introduced that describes the reflectance and the texture based on an analysis of specular reflection from the fibers.</li></ol><p>procedural model 特点： Unlike data-based models, our procedural model doesn’t require image data. It can handle a wide range of fabrics using a small set of physically meaningful parameters that describe the characteris- tics of the fibers, the geometry of the yarns, and the pattern of the weave. </p><p>最后： The model is validated against the measurements and evaluated by comparisons to high-resolution video of the real fabrics and to BTF models of two of the fabrics.</p><h2 id="梗概"><a href="#梗概" class="headerlink" title="梗概"></a>梗概</h2><h3 id="cloth-在-cg-中重要性"><a href="#cloth-在-cg-中重要性" class="headerlink" title="cloth 在 cg 中重要性"></a>cloth 在 cg 中重要性</h3><p>Cloth is an important material to render convincingly because it is so often important in computer graphics scenes, especially those involving virtual humans in everyday environments. </p><h3 id="作者想要实现的"><a href="#作者想要实现的" class="headerlink" title="作者想要实现的"></a>作者想要实现的</h3><p>Our goal is to develop a simple, easy-to-use procedural model for the appearance of cloth that efficiently captures the important features of its appearance based on physically meaningful parameters.</p><h3 id="贡献"><a href="#贡献" class="headerlink" title="贡献"></a>贡献</h3><p>This work makes two contributions: a set of measurements and a model to fit them. </p><ol><li>We present new, detailed measurements of the anisotropic Bidirectional Reflectance Distribution Function (BRDF) of six fabrics representing four textile fibers and the three most common weave patterns, as well as texture measurements for some of the fabrics. To study the appearance of the fabrics in con- text, we also took high-resolution video of the fabrics in a draped configuration under controlled conditions.</li><li>Our second contribution is a new reflection model for woven fabrics. The model is based on an analysis of specular scattering from fibers that are spun into yarns and then woven into fabric based on a given weaving pattern. Its parameters are all physically meaningful, describing the scattering properties of the fibers and the geometry of the yarns and weave. The model predicts both BRDF and, by a simple mapping of specular highlights onto the cloth surface, the texture of specular highlights. It defines a spatially varying BRDF that fits into standard realistic rendering systems and can be integrated over incident light using standard methods.</li></ol><h3 id="和传统Bidirectional-Texture-Functions的区别"><a href="#和传统Bidirectional-Texture-Functions的区别" class="headerlink" title="和传统Bidirectional Texture Functions的区别"></a>和传统Bidirectional Texture Functions的区别</h3><p>We present new, detailed measurements of the anisotropic Bidirectional Reflectance Distribution Function (BRDF) of six fabrics representing four textile fibers and the three most common weave patterns, as well as texture measurements for some of the fabrics. </p><p>While physics-based models are derived from analysis of first principles, data-based models gather the reflection data by taking many pictures of the material to be modeled, store those data in a database, and query the database for the appropriate reflection data at render time. </p><h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><p>We validate our model against our measurements and compare to renderings using BTFs. While the resulting appearance is not per- fect, lacking some shadowing&#x2F;masking effects and the irregularities of real cloth, our model predicts many key features both of the direc- tional reflectance distribution and of the evolution of texture with viewing and illumination angle. Its accuracy compares favorably with BTFs in many respects. Because all the directional variation in the model is due to specular reflection, an implication of this work is that specular reflection plays a more important role in the appearance of even quite matte fabrics than previously appreciated.</p><h2 id="关于不同织物我们需要考虑的物理变量"><a href="#关于不同织物我们需要考虑的物理变量" class="headerlink" title="关于不同织物我们需要考虑的物理变量"></a>关于不同织物我们需要考虑的物理变量</h2><center><img src="/2022/09/29/Specular-Reflection-from-Woven-Cloth%E8%AE%BA%E6%96%87%E6%80%BB%E7%BB%93/1.jpeg" width="900" height="200"> <br></center><h4 id="1-编织模式"><a href="#1-编织模式" class="headerlink" title="1. 编织模式"></a>1. 编织模式</h4><p>织布是由两组平行的纱线（称为经线和纬线）以直角相互交错而成的。在织造过程中，经纱被提升或降低，纬纱（也称为填充物）被插入所产生的空间中。经线和纬线交错的模式差异很大。<br>但大多数织物是以三种最简单的编织模式之一制成的：平纹、斜纹和缎纹</p><h4 id="2-织布中不同的纺织纤维"><a href="#2-织布中不同的纺织纤维" class="headerlink" title="2.织布中不同的纺织纤维"></a>2.织布中不同的纺织纤维</h4><p>天然纤维（例如：棉、羊毛和丝；合成纤维（例如：聚酯、尼龙和丙烯酸）；以及纤维素纤维（例如：人造纤维和醋酸纤维）。这些纤维可分为两种类型：短纤维<br>和长丝纤维。</p><ul><li>短纤维被相互缠绕，使它们通过摩擦而固定在一起。We use the term “staple” to refer to twisted staple yarn.</li><li>长丝纤维–如丝绸和许多合成纤维–是非常长的。因此，长丝纱线不需要捻在一起，就能保持在一起。 We use the term “filament” to refer to untwisted filament yarn.</li></ul><h4 id="3-总结"><a href="#3-总结" class="headerlink" title="3.总结"></a>3.总结</h4><p> 纱线的作用力使纱段弯曲成弧形，向可见一侧凸起。弯曲的程度对外观很重要，它取决于纱线的硬度、纱段的长度、纱线的张力以及与之相互作用的其他纱线的张力。</p><h1 id="2-关于测量"><a href="#2-关于测量" class="headerlink" title="2.关于测量"></a>2.关于测量</h1><h2 id="测量BRDF"><a href="#测量BRDF" class="headerlink" title="测量BRDF"></a>测量BRDF</h2><p>To measure the BRDFs of our materials, we illuminated them with a light source of small solid angle and measured the reflected radiance by photographing them with a scientific CCD camera.</p><p>We measured datasets consisting of 225 incident directions for each of seven exitant directions. The incident directions are on a grid covering the hemisphere out to approximately 75 degrees, and the viewing directions coarsely cover the hemisphere (with the assumption of 180◦ rotational symmetry) out to 60 degrees.</p><h2 id="测量结果"><a href="#测量结果" class="headerlink" title="测量结果"></a>测量结果</h2><ol><li>there is an obvious difference between filament yarns, which produce a pair of fairly claffssic anisotropic linear highlights (one from the warp yarns and one from the weft)</li></ol><h2 id="测量Texture"><a href="#测量Texture" class="headerlink" title="测量Texture"></a>测量Texture</h2><p>但使用了放大倍数的微距镜头，使纱线能够被清楚地辨别出来。（这里我觉得是对model的两种模式进行铺垫)</p><h1 id="3-关于model"><a href="#3-关于model" class="headerlink" title="3.关于model"></a>3.关于model</h1><h3 id="一"><a href="#一" class="headerlink" title="一"></a>一</h3><h4 id="BRDF"><a href="#BRDF" class="headerlink" title="BRDF"></a>BRDF</h4><p>简单来说：如何把从一个方向接收到的能量反射到另一个方向去。</p><p>是一个比例，一个area 从某一个方向接收到的radience乘以入射角后得到它的irridence。在反射成radience出去。<br>BRDF定义如何去分配向各个角度反射的光强弱。这也就区分了镜面反射还是漫反射。如果是漫反射各个方向大致相同。镜面反射的话会有一个着重点光线很强。</p><center><img src="/2022/09/29/Specular-Reflection-from-Woven-Cloth%E8%AE%BA%E6%96%87%E6%80%BB%E7%BB%93/2.jpeg" width="500" height="250"> <br></center><p>我们给yarn模拟成图2的样子。线的表面我们假设是镜面反射。为了得到镜面反射对BRDF的总贡献，我们可以沿着纱线段（u方向）或围绕纱线段（v方向）整合反射。<br>镜面反射曲线上某一点的反射光量是GufcA或GvfcA。</p><ol><li>几何系数Gu or Gv.这是由纱线段的几何形状决定的 （6.4）</li></ol><p>计算公式（1）或公式（2）中的几何因子需要评估（φ,v）或（φ,u）相对于ωi和曲率R的雅可比矩阵。<br>对于雅可比矩阵，我们首先观察到ωi的允许变化只在与单位球体相切的方向上（因为ωi是一个方向矢量，不能改变长度）。此外，φ因ωi垂直于反射锥的微小变化而不变，而u或v因ωi沿锥体的微小变化而不变。所以导数的行列式是两个方向性导数的乘积</p><center><img src="/2022/09/29/Specular-Reflection-from-Woven-Cloth%E8%AE%BA%E6%96%87%E6%80%BB%E7%BB%93/5.jpeg" width="500" height="250"> <br></center><ol start="2"><li>相位函数fc。这个函数描述了纤维的局部行为，它应该根据被建模的纤维的实际<br>行为来选择。 （6.5）</li></ol><p>相位函数是一种特定类型纤维的物理属性。请注意，所需的相位函数不是单个纤维的相位函数，而是描述在纱线附近发生的多个散射事件的影响的相位函数，这些散射事件都与同一纤维的切线相抵。由于纤维共享同一切线，多重散射光仍将停留在镜面锥体中，但将更多地分散在锥体周围。<br>调查单独的纱线和纤维的散射特性以发现和模拟它们的行为是一个重要的研究课题，超出了目前工作的范围。相反，我们使用一个具有适当的一般属性的通用相位函数，它可以被调整以模拟不同的纤维。对单纤维散射的初步测量，以及将模型与数据进行拟合的经验表明，相位函数应该主要是前向散射，而均匀成分较小。为此，我们使用了一个相位函数，它是一个常数和一个前向叶的总和；我们使用Von Mises分布[Evans等人，2000]，对入射方向和出射方向之间的角度进行评估，对叶进行评估</p><ol start="3"><li>衰减函数A。这个函数描述了光在进入和离开纱线的过程中被其他纤维的衰减；它取决于纤维的特性以及它们的微观排列。 （6.6）</li></ol><h3 id="二"><a href="#二" class="headerlink" title="二"></a>二</h3><p> 有两种模式：</p><ol><li>the reflectance model</li></ol><p>我们不需要关注纹理只需要考虑BRDF的时候采用的model。</p><ol start="2"><li>the texture model</li></ol><p>我们需要关注细节纹理的时候采用的model。</p><p> 这两种方法具有相同的BRDF。这使得两者之间可以无缝切换。(ωi是入射方向，ωr是出射方向，（x，y）是布表面的一个点）。</p><h3 id="reflectance-model"><a href="#reflectance-model" class="headerlink" title="reflectance model"></a>reflectance model</h3><h4 id="BSDF-Bidirectional-scattering-distribution-function"><a href="#BSDF-Bidirectional-scattering-distribution-function" class="headerlink" title="BSDF (Bidirectional scattering distribution function)"></a>BSDF (Bidirectional scattering distribution function)</h4><p>双向散射分布函数（BSDF）从辐射角度描述了从一个表面散射的光辐射，作为入射光束和散射光束的角度位置的函数。根据定义，它是散射辐射度与入射辐射度的比值：单位是反立体度。术语双向反射率分布函数（BRDF）是在专门提到反射散射时使用的。同样，双向透射率分布函数（BTDF）指的是通过材料传输的散射。<br>在不考虑相关的阴影遮挡或相互反射的情况下，我们可以从fs中得出fr，方法是假设光根据fs从一个区段散射出去，而不管它在哪里击中该区段，同时也假设散射光有相同的概率逃离表面，而不管它在哪里离开该区段。我们将入射辐照度均匀地分配给所有的区段，因此每个区段收到的平均辐射度为Li (ωi ) (ωi )z，其中(ωi )z是ωi的z分量。逃逸的光的部分也被假定为与(ωi)z成正比，并且由于它逃逸的投影面积与(ωi)z成正比，辐射度与各段的强度成正比。<br>这使得fr和fs之间的关系非常简单：fr(ωi,ωr)直接与fs(ωi,ωr)成正比，而且比例常数可以被吸收到镜面系数中。因此fs将直接作为我们反射率模型的镜面分量。</p><center><img src="/2022/09/29/Specular-Reflection-from-Woven-Cloth%E8%AE%BA%E6%96%87%E6%80%BB%E7%BB%93/3.jpeg" width="900" height="200"> <br></center><p>BRDF（irradiance argue , radiance argue) &#x3D; integration (几何系数 x 相位函数 x 衰减函数A)</p><h3 id="texture-model"><a href="#texture-model" class="headerlink" title="texture model"></a>texture model</h3><p>为了使织物看起来逼真，当以足够高的放大倍数渲染织物时，必须再现单个纱线反射的独特纹理。要取得好的效果，只需要非常粗略地预测高光的位置和形状；如果放大率高到足以解决纱线内部的细节，就必须使用更详细的模型。</p><p>由于我们的反射率模型已经计算了高光环。（v 和 u 那个参数）<br>因为我们之前积分得到了高光环。所以我们现在我们可以利用这些信息将积分 “解卷 “到texture中，以满足纹理空间的平均亮度等于BRDF值的约束条件。我们通过将u和v线性地映射到布面上的片段矩形来做到这一点。片段矩形的参数为-w&#x2F;2≤x≤w&#x2F;2和-l&#x2F;2≤y≤l&#x2F;2。</p><h2 id="5-几何"><a href="#5-几何" class="headerlink" title="5 几何"></a>5 几何</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><ul><li><p>一块织物可以被认为是一段矩形的集合 （织物表面可见的短的纱线段）。 不同排列组合模式对应着不同种类的编制方式正如我们之前所提到。</p></li><li><p>半径为a。一个半径为a的圆形截面沿着y-z平面上从u&#x3D;-umax到u&#x3D;umax的脊柱曲线x0(u)垂直扫过；这里，umax是最大倾斜角。我们将在后面几段讨论参数u。</p></li><li><p>通常情况下，脊柱是一个圆弧。</p></li><li><p>重要的假设：纱线是由相对较长的纤维组成的，这些纤维可能被扭曲在一起。当短纤维纱线是直的，我们假设纤维以螺旋状围绕纱线轴线排列，靠近纱线表面的纤维的切线矢量都与纱线轴线成相同角度。当短纤维纱线被弯曲成弧形结构时，我们假设它呈现出具有弧形脊柱和圆形截面的管子形状。我们假设纤维的方向随横截面旋转，与脊柱保持相同的角度。由于长丝纱线没有加捻，纤维只是与纱线轴线平行。</p></li></ul><p>一个完整的织物描述从一组单纯的纤维参数和漫射系数开始。然后，对于织造图案中每一个不同类型的纱线段，我们需要一组纱线和织造参数以及一个镜面系数。本文中的所有例子都有两种不同的纱段类型，一种是经线，一种是纬线。<br>这些模型被定义为每段的漫反射分量和镜面分量之和</p><center><img src="/2022/09/29/Specular-Reflection-from-Woven-Cloth%E8%AE%BA%E6%96%87%E6%80%BB%E7%BB%93/6.jpeg" width="900" height="200"> <br></center><h2 id="结果-1"><a href="#结果-1" class="headerlink" title="结果"></a>结果</h2><p>我们在MATLAB中实现了用于数据拟合的反射率模型，在用Java编写的蒙特卡洛光线追踪系统中实现了用于渲染的纹理模型。在渲染器中，布料模型作为一个空间变化的BRDF。它接收纹理坐标、阴影框架以及入射和出射方向，并使用纹理模型计算出BRDF值，然后返回给系统。</p><h2 id="F15"><a href="#F15" class="headerlink" title="F15"></a>F15</h2><p>从最小压缩的6561个图像采集的BTF（左边）、参考照片（中间）和我们的分析模型（右边）的渲染结果之间的比较。捕获的BTF数据产生了更多的照片外观，特别是对于丝绸山东面料，但它产生了平滑的高光，错过了一些细节，并且在掠过的观察和照明角度下，外观相当错误。(颜色不能直接比较，因为BTFs是用不同的相机和颜色处理管道捕获的）。</p><h2 id="last"><a href="#last" class="headerlink" title="last"></a>last</h2><p>这项工作提出了对编织品的光反射的广泛研究。我们的反射率测量显示了各种现象，从尖锐的各向异性亮点到不对称的非朗伯斯漫反射图案，我们的模型表明，一旦考虑到材料的结构几何，大多数这些特征都可以解释为由镜面反射产生的</p><p>可以使用更复杂的衰减模型。为了集中研究镜面反射，我们忽略了纱线间的相互作用，但这些相互作用的一些影响在数据中是可见的。例如，牛仔布的白色纬线点在掠过角度的转盘照片中消失了，</p><p>使用我们的模型的一个主要优点是它不需要任何数据，因此可以用来对任意一块织物进行建模，甚至是没有的或没有生产过的织物</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>exp 笔记1</title>
    <link href="/2022/09/26/exp-%E7%AC%94%E8%AE%B01/"/>
    <url>/2022/09/26/exp-%E7%AC%94%E8%AE%B01/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>算法-笔记1</title>
    <link href="/2022/09/25/ag-%E7%AC%94%E8%AE%B01/"/>
    <url>/2022/09/25/ag-%E7%AC%94%E8%AE%B01/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="ddbd9e14d3ea8c4ee9038a70c7de199de90c115e079594739224095a85ff250d"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">password</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>modeling 笔记</title>
    <link href="/2022/09/25/modeling-%E7%AC%94%E8%AE%B0/"/>
    <url>/2022/09/25/modeling-%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="line"><a href="#line" class="headerlink" title="line"></a>line</h1><p>polyline: 连续的折线</p><p>line: 不管啥样的线都是1D的。line 包含curve。</p><center><img src="/2022/09/25/modeling-%E7%AC%94%E8%AE%B0/1.jpeg" width="400" height="50"> <br></center><p>左边的公式适用于在曲线上生成点（为了pipeline）</p><p>右边的公式适用于描述trajectories(轨道)。可以用来延续一条curve。</p><center><img src="/2022/09/25/modeling-%E7%AC%94%E8%AE%B0/2.jpeg" width="400" height="50"> <br></center><p>define 1D curve in 3D space.</p><h2 id="Speedline"><a href="#Speedline" class="headerlink" title="Speedline"></a>Speedline</h2><p>curve上取两个及以上个数的点。</p><p>interpolation : curve经过了所有的specify points</p><p>approxmiation : curve没有必要经过所有的点</p><h2 id="cubic-bezier-curves"><a href="#cubic-bezier-curves" class="headerlink" title="cubic bezier curves"></a>cubic bezier curves</h2><center><img src="/2022/09/25/modeling-%E7%AC%94%E8%AE%B0/3.jpeg" width="400" height="200"> <br></center><p>这种曲线总是被control points 组成的convex包裹着 </p><p>注： 曲线在endpoint 正切</p><center><img src="/2022/09/25/modeling-%E7%AC%94%E8%AE%B0/4.jpeg" width="400" height="200"> <br></center><p>图像描述了每一个基于T的点的权重值</p><p>性质: partition of unity : 相加得1 ; T [0,1] .  所以被convew包裹着</p><center><img src="/2022/09/25/modeling-%E7%AC%94%E8%AE%B0/5.jpeg" width="400" height="50"> <br></center><p>matrix1： control points</p><p>matrix2: coefficient</p><p>matrix3: Bernstein polynomials</p><center><img src="/2022/09/25/modeling-%E7%AC%94%E8%AE%B0/6.jpeg" width="400" height="200"> <br></center><p>使曲线变得更复杂。如图采取中点。给曲线由3个control points 变成7 个。 </p><p>注: 也可以不是中点 而是任意的radio。</p><h2 id="continuity"><a href="#continuity" class="headerlink" title="continuity"></a>continuity</h2><center><img src="/2022/09/25/modeling-%E7%AC%94%E8%AE%B0/7.jpeg" width="400" height="200"> <br></center><p>C0 : 两条curve相交点是sharp kink。</p><p>G1 : 两条curve相交点tan是同一个direction。</p><p>C1 : 两条curve相交点tan完全相同。</p><p>C2 : 两条curve相交点tan完全相同，导数也完全相同。</p><h2 id="cubic-BSP-line"><a href="#cubic-BSP-line" class="headerlink" title="cubic BSP line"></a>cubic BSP line</h2><center><img src="/2022/09/25/modeling-%E7%AC%94%E8%AE%B0/8.jpeg" width="400" height="200"> <br></center><h2 id="BSP-vs-Bezier"><a href="#BSP-vs-Bezier" class="headerlink" title="BSP vs Bezier"></a>BSP vs Bezier</h2><p>BSP 不经过endpoints</p><p>Bezier 经过</p><h1 id="surface"><a href="#surface" class="headerlink" title="surface"></a>surface</h1><center><img src="/2022/09/25/modeling-%E7%AC%94%E8%AE%B0/9.jpeg" width="400" height="200"> <br></center><p>给一个线拉成平面</p><h4 id="Implicit-surface"><a href="#Implicit-surface" class="headerlink" title="Implicit surface"></a>Implicit surface</h4><p>在数学中，隐式曲面是欧几里得空间中由方程定义 的曲面。<br>F(x,y,z)&#x3D;0<br>隐式曲面是三个变量的函数的零点集合。隐式意味着方程没有求解x或y或z。</p><p>ep: 球体 x^2+y^2+z^2 &#x3D; n^2</p><h4 id="Parametric-Surface"><a href="#Parametric-Surface" class="headerlink" title="Parametric Surface"></a>Parametric Surface</h4><p>输出的成分是基于一些参数或参数的。</p><p>如二次贝塞尔曲线（其中A、B、C和CurvePoint是N个维度的点）。<br>CurvePoint &#x3D; f(t) &#x3D; A*(1-t)^2 + B<em>2t(1-t) + C</em>t^2</p><p>或单位圆。<br>x &#x3D; cos(t)<br>y &#x3D; sin(t)</p><p>或者像这样的曲面。<br>SurfacePoint3D &#x3D; f(u,v)</p><h4 id="explicit-surface"><a href="#explicit-surface" class="headerlink" title="explicit surface"></a>explicit surface</h4><p>比较常见的函数类型，你在左边有一个变量（因变量），右边有另一个变量（自变量）。</p><p>比如说线。<br>y &#x3D; mx + b</p><p>或高度场。<br>高度 &#x3D; f(x,y)Ackermann Ackermann </p><p>L * R &#x3D; C </p><p>The color gets less saturated as gets closer to white.</p>]]></content>
    
    
    
    <tags>
      
      <tag>37111</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>games 笔记1</title>
    <link href="/2022/09/24/game-%E7%AC%94%E8%AE%B0/"/>
    <url>/2022/09/24/game-%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="Week-1"><a href="#Week-1" class="headerlink" title="Week 1"></a>Week 1</h1><h1 id="Dijkstra"><a href="#Dijkstra" class="headerlink" title="Dijkstra"></a>Dijkstra</h1><p>考虑移动成本的搜索。文明中单位经过不同地形移动的举例不同。 用一个 priority queue。</p><p>优先队列里存放着各个地点。因为有可能多个路径经过同一个地点，所以如果当前loop中该地点在queue中已经有值，则只存放相对较好的值。</p><p>注： 相对于 Dijkstra ， BFS 就无法判断成本，只能寻找最短路径。</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">priority</span> <span class="hljs-operator">=</span> new_cost<br></code></pre></td></tr></table></figure><h1 id="Heuristic-search-（Greedy-Best-First-Search）"><a href="#Heuristic-search-（Greedy-Best-First-Search）" class="headerlink" title="Heuristic search （Greedy Best First Search）"></a>Heuristic search （Greedy Best First Search）</h1><p>经典的贪婪。 Dijkstra 可以寻找多个路径，但我们往往只需要一个。优先队列，但不加入cost so far 改为distance to goal （两点间距离公式）。</p><p>也不判断成本，且结果不一定最好，不适合复杂路径，但速度快很多。</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">priority</span> = heuristic(goal, next)<br></code></pre></td></tr></table></figure><p>在这里用property queue </p><p>注： </p><ol><li>heuristic(启发式)这里采用了距离公式，每种类型的图启发式是不一样的，需要自己寻找。</li><li>有可能找不到解，甚至是一个。</li><li>没有backtrack，有可能stack。</li></ol><h1 id="A"><a href="#A" class="headerlink" title="A*"></a>A*</h1><p>A* will tell you to move from one location to another but it won’t tell you how.</p><p>把前两个合起来。比Dijstra快且结果是正确的。</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">priority = <span class="hljs-keyword">new</span><span class="hljs-type">_cost</span> + heuristic(goal, next)<br></code></pre></td></tr></table></figure><h3 id="good-heuristic-monotoic"><a href="#good-heuristic-monotoic" class="headerlink" title="good heuristic - monotoic"></a>good heuristic - monotoic</h3><center><img src="/2022/09/24/game-%E7%AC%94%E8%AE%B0/1.jpeg" width="400" height="300"> <br></center><h1 id="week-2"><a href="#week-2" class="headerlink" title="week 2"></a>week 2</h1><h2 id="Chapater-2"><a href="#Chapater-2" class="headerlink" title="Chapater 2"></a>Chapater 2</h2><h3 id="Best-response"><a href="#Best-response" class="headerlink" title="Best response"></a>Best response</h3><p>玩家找到最好的返回值</p><p> Let si be the strategy of player $i, i &#x3D; 1, . . . , k.$</p><p>$s_{i^*}$  is a best response to the collection of<br>opponent strategies if and only if<br>I no other strategy which player i can play gives a higher<br>payoff.</p><ul><li>有可能有不止一个最好解（best response strategy）</li><li>有可能没有最好解，比如两个玩家比较谁说的数字最大</li><li>有限集合(Finite strategy space)一定会有最好解。</li><li>无限集合不一定。</li></ul><h3 id="Nash-Equilibrium"><a href="#Nash-Equilibrium" class="headerlink" title="Nash Equilibrium"></a>Nash Equilibrium</h3><p>A strategy profile $(s_{1^*},s_{2^*},…s_{k^*})$ with k players, 所有玩家的战略都是对他们来说最好的就是Nash均衡。</p><h1 id="Lecture-3"><a href="#Lecture-3" class="headerlink" title="Lecture 3"></a>Lecture 3</h1><h2 id="Definition-2"><a href="#Definition-2" class="headerlink" title="Definition 2"></a>Definition 2</h2><ol><li>game of perfect information: 一个抉择树每个节点都有一个条件。也就是说任意玩家在任意时间都知道自己所在的位置。反之则是imperfect information。</li><li>zero-sum: 每一个叶子上所有用户的总和payoff是0。也就是说用户不会从中得到什么。</li><li>without chance： 节点没有被自然控制。 反之是game with chance。</li></ol><p>ep: 棋类是 2-person zero-sum games of perfect information without chance.<br>ep: Poker is a zero-sum1 game of imperfect information with chance.</p><h2 id="Definition-3"><a href="#Definition-3" class="headerlink" title="Definition 3"></a>Definition 3</h2><p>fully specified strategy : 对一个特定的玩家，有多少种战略。把所有可能性走法加起来。</p><h4 id="Generating-all-strategies-for"><a href="#Generating-all-strategies-for" class="headerlink" title="Generating all strategies for"></a>Generating all strategies for</h4><ul><li><p>如果玩家i第一步先走的话： Ni(t) &#x3D; Ni(t1) + Ni(t2) + · · · + Ni(tn).</p></li><li><p>如果玩家i第一步后走的话： Ni(t) &#x3D; Ni(t1) × Ni(t2) × · · · × Ni(tn).</p></li></ul><h1 id="week3"><a href="#week3" class="headerlink" title="week3"></a>week3</h1><h2 id="Nash-Equilibrium-1"><a href="#Nash-Equilibrium-1" class="headerlink" title="Nash Equilibrium"></a>Nash Equilibrium</h2><h4 id="Def"><a href="#Def" class="headerlink" title="Def"></a>Def</h4><p>Definition: A strategy profile (s1,s2,s3…sk) for a game with k<br>players, is a Nash equilibrium if each strategy is a best<br>response to all of the others.</p><ul><li>It is not a strategy; it is a choice of strategy for all players in<br>the game.</li><li>If the players are playing the Nash, no player has any<br>incentive to change its strategy unilaterally</li></ul><h2 id="Mini-max-approach"><a href="#Mini-max-approach" class="headerlink" title="Mini-max approach"></a>Mini-max approach</h2><center><img src="/2022/09/24/game-%E7%AC%94%E8%AE%B0/2.jpeg" width="400" height="200"> <br></center><center><img src="/2022/09/24/game-%E7%AC%94%E8%AE%B0/3.jpeg" width="400" height="200"> <br></center><p>解释上图： </p><ol><li>寻找Amelia的min ， 1，2，3，1</li><li>寻找Scott的max， 7，3，5，6</li><li>找Amelia的min中的max 和 Scott的max中的min 的那个点。</li></ol><h2 id="Dominance"><a href="#Dominance" class="headerlink" title="Dominance"></a>Dominance</h2><center><img src="/2022/09/24/game-%E7%AC%94%E8%AE%B0/4.jpeg" width="400" height="200"> <br></center><h2 id="Dominance-can-be-used-to-eliminate-some-strategies"><a href="#Dominance-can-be-used-to-eliminate-some-strategies" class="headerlink" title="Dominance can be used to eliminate some strategies"></a>Dominance can be used to eliminate some strategies</h2><center><img src="/2022/09/24/game-%E7%AC%94%E8%AE%B0/5.jpeg" width="400" height="200"> <br></center><h2 id="mixed-strategies"><a href="#mixed-strategies" class="headerlink" title="mixed strategies"></a>mixed strategies</h2><p>A mixed strategy is a strategy for a player in which:</p><ul><li>I plays probabilistic combination of pure strategies;</li><li>I receives a probabilistic combination of payoffs</li></ul><h4 id="Extensive-form"><a href="#Extensive-form" class="headerlink" title="Extensive form"></a>Extensive form</h4><p>一个路径上有权重比例的树</p><p>At each node where the player has a<br>decision, assign a probability function to each<br>of the possible choices.</p><h4 id="con"><a href="#con" class="headerlink" title="con"></a>con</h4><ol><li>Only for a special class of games do strategies which beat<br>all opponents always exist (two-player, zero-sum, perfect<br>information, no chance).</li><li>A Nash equilibrium is a collection of strategies for all<br>players such that each player is playing best response to<br>all the others.</li><li>For a zero-sum, two-player game in normal form, a<br>strategy pair which is maximal in its columns and minimal<br>in its rows is a Nash equilibrium.</li><li>Dominance can be used to reduce the number of<br>strategies.</li><li>Nash equilibria also exist in general-sum games.</li></ol><h1 id="Week4"><a href="#Week4" class="headerlink" title="Week4"></a>Week4</h1><h2 id="The-minmax-rule"><a href="#The-minmax-rule" class="headerlink" title="The minmax rule"></a>The minmax rule</h2><p>• MAX nodes are trying to maximise the payoff to player 1.<br>• MIN nodes are trying to minimise the payoff to player 1.</p><p>The value V(J) of a node J is</p><ol><li>If J is a terminal node, V(J) is equal its payoff U(J).</li><li>If J is a MAX node, V(J) is the maximum value of its<br>children.</li><li>If J is a MIN node, V(J) is the minimum value of its<br>children.</li></ol><center><img src="/2022/09/24/game-%E7%AC%94%E8%AE%B0/6.jpeg" width="400" height="200"> <br></center><center><img src="/2022/09/24/game-%E7%AC%94%E8%AE%B0/7.jpeg" width="400" height="200"> <br></center><h3 id="suppose-multi-players"><a href="#suppose-multi-players" class="headerlink" title="suppose multi players"></a>suppose multi players</h3><p>Can not approach an equilibria : </p><h1 id="Week-6"><a href="#Week-6" class="headerlink" title="Week 6"></a>Week 6</h1><h2 id="Trajectory-based-approaches"><a href="#Trajectory-based-approaches" class="headerlink" title="Trajectory-based approaches"></a>Trajectory-based approaches</h2><h2 id="Q-learning"><a href="#Q-learning" class="headerlink" title="Q-learning"></a>Q-learning</h2><p>就是根据行为的后果来加强或减弱行为。如果后果是好的，则加强行为，如果后果是坏的则减弱行为。通过这种方式来获得趋利避害的能力。公式后一部分是对后果的估值。<br>q-training就是个建立“操作性条件反射”的过程</p><p>Q(s, a)</p>]]></content>
    
    
    
    <tags>
      
      <tag>34111</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>games101-笔记-光栅化</title>
    <link href="/2022/08/30/games101-%E7%AC%94%E8%AE%B0-%E5%85%89%E6%A0%85%E5%8C%96/"/>
    <url>/2022/08/30/games101-%E7%AC%94%E8%AE%B0-%E5%85%89%E6%A0%85%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<p>orthographic projection（正交投影）:</p><p>忽略深度信息。相机无限远</p><p>perspective projection （透视）:</p><p>有近大远小的效果</p><p>先变为正交投影。然后透视。</p><p>早期的屏幕：（Cathode Ray Tube）阴极射线管。电子打出来射到屏幕上。工作原理是每一行每一行从上往下打电子。隔行扫描（raster scan）我第一帧扫描1，3，5行。第二帧扫描第2，4，6行。问题：对于高速运动视频会造成严重的画面撕裂。</p><p>中期：（Liquid Crystal Display）液晶显示器。<br>(LED) 发光二极管。 只有发光和不发光。之前灯已经确定好颜色了。</p><h3 id="三角形："><a href="#三角形：" class="headerlink" title="三角形："></a>三角形：</h3><ol><li>最基础多边形且三个点肯定在一个平面内。</li><li>任何多边形都可以拆解成三角形。</li></ol><h3 id="判断："><a href="#判断：" class="headerlink" title="判断："></a>判断：</h3><p>像素的中心点与三角形的位置关系。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>蒙特卡罗积分</title>
    <link href="/2022/08/26/%E8%92%99%E7%89%B9%E5%8D%A1%E7%BD%97%E7%A7%AF%E5%88%86/"/>
    <url>/2022/08/26/%E8%92%99%E7%89%B9%E5%8D%A1%E7%BD%97%E7%A7%AF%E5%88%86/</url>
    
    <content type="html"><![CDATA[<p>给任何一个函数，求定积分（面积）。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>games101-笔记-辐射度量学</title>
    <link href="/2022/08/22/games101-%E7%AC%94%E8%AE%B0-%E8%BE%90%E5%B0%84%E5%BA%A6%E9%87%8F%E5%AD%A6/"/>
    <url>/2022/08/22/games101-%E7%AC%94%E8%AE%B0-%E8%BE%90%E5%B0%84%E5%BA%A6%E9%87%8F%E5%AD%A6/</url>
    
    <content type="html"><![CDATA[<h2 id="intro"><a href="#intro" class="headerlink" title="intro"></a>intro</h2><p>radiant energy : energy of electromagnetic radation.<br>Q(J)</p><p>radiant flux（power） : energy emitted per unit time. P &#x3D; Q&#x2F;t (W) , lm (流明)</p><h2 id="Intensity"><a href="#Intensity" class="headerlink" title="Intensity"></a>Intensity</h2><p>power per unit solid angle (立体角对应的能量)</p><p>I &#x3D; P&#x2F;w (P&#x3D; power , w &#x3D; 立体角)</p><h4 id="solid-angle"><a href="#solid-angle" class="headerlink" title="solid angle :"></a>solid angle :</h4><p>angle:</p><center><img src="/2022/08/22/games101-%E7%AC%94%E8%AE%B0-%E8%BE%90%E5%B0%84%E5%BA%A6%E9%87%8F%E5%AD%A6/1.jpeg" width="200" height="200"> <br></center><p>solid angle:</p><center><img src="/2022/08/22/games101-%E7%AC%94%E8%AE%B0-%E8%BE%90%E5%B0%84%E5%BA%A6%E9%87%8F%E5%AD%A6/2.jpeg" width="200" height="200"> <br></center><h2 id="Irradiance"><a href="#Irradiance" class="headerlink" title="Irradiance"></a>Irradiance</h2><p>power per unit area (面积所对应的能量)</p><p>E &#x3D; dP&#x2F;dA (P &#x3D; power  , A &#x3D;area) </p><h4 id="Irradiance-Falloff"><a href="#Irradiance-Falloff" class="headerlink" title="Irradiance Falloff"></a>Irradiance Falloff</h4><p>光在传播路程中会衰减。radient Intensity 不会衰减。因为立体角的光就那些不会变。 但是Irradiance 会衰减。因为随着光传播越来越远。area 越来越大。单位面积对应的power越来越小。</p><h2 id="Radiance"><a href="#Radiance" class="headerlink" title="Radiance"></a>Radiance</h2><p>power per unit solid angle, per unit area. </p><p>做两次微分。跟立体角和单位面积都有关系。</p><ol><li>radiance &#x3D; Irradiance per soild angle</li><li>radiance &#x3D; Intensity per projected unit area</li></ol><h4 id="incident-radiance"><a href="#incident-radiance" class="headerlink" title="incident radiance"></a>incident radiance</h4><p>从一个方向过来而被吸收的能量叫做incident radiance。</p><p>irradiance 和 radiance的区别就是是否有方向性。我们描述一块区域上面有多少的能量是irradiance，但一个区域上面的能量可以是从四面八方吸收而来的，我们只考虑在这个区域中能吸收多少能量从特定角度而来的就是incident radiance。</p><h4 id="exiting-radiance"><a href="#exiting-radiance" class="headerlink" title="exiting radiance"></a>exiting radiance</h4><p>从一个方向出去的光强度从特定的区域和特定的角度。</p><center><img src="/2022/08/22/games101-%E7%AC%94%E8%AE%B0-%E8%BE%90%E5%B0%84%E5%BA%A6%E9%87%8F%E5%AD%A6/3.jpeg" width="500" height="200"> <br></center><p>如下图所示如果我们想判断所有方向射入目标面的光只需要积分即可。</p><center><img src="/2022/08/22/games101-%E7%AC%94%E8%AE%B0-%E8%BE%90%E5%B0%84%E5%BA%A6%E9%87%8F%E5%AD%A6/4.jpeg" width="500" height="300"> <br></center><h2 id="BRDF"><a href="#BRDF" class="headerlink" title="BRDF"></a>BRDF</h2><h3 id="step-1-BRDF"><a href="#step-1-BRDF" class="headerlink" title="step 1 (BRDF)"></a>step 1 (BRDF)</h3><p>简单来说：如何把从一个方向接收到的能量反射到另一个方向去。</p><ol><li>是一个比例，一个area 从某一个方向接收到的radience乘以入射角后得到它的irridence。在反射成radience出去。</li><li>BRDF定义如何去分配向各个角度反射的光强弱。这也就区分了镜面反射还是漫反射。如果是漫反射各个方向大致相同。镜面反射的话会有一个着重点光线很强。</li></ol><center><img src="/2022/08/22/games101-%E7%AC%94%E8%AE%B0-%E8%BE%90%E5%B0%84%E5%BA%A6%E9%87%8F%E5%AD%A6/5.jpeg" width="500" height="300"> <br></center><h3 id="step-2-refection-equation"><a href="#step-2-refection-equation" class="headerlink" title="step 2 (refection equation)"></a>step 2 (refection equation)</h3><p>刚才只考虑了一个方向现在考虑所有方向了。</p><center><img src="/2022/08/22/games101-%E7%AC%94%E8%AE%B0-%E8%BE%90%E5%B0%84%E5%BA%A6%E9%87%8F%E5%AD%A6/7.jpeg" width="500" height="300"> <br></center><h3 id="step-3-rendering-equation"><a href="#step-3-rendering-equation" class="headerlink" title="step 3 (rendering equation)"></a>step 3 (rendering equation)</h3><p>如果当前物体自己会发光。反射方程+自己的发光项</p><center><img src="/2022/08/22/games101-%E7%AC%94%E8%AE%B0-%E8%BE%90%E5%B0%84%E5%BA%A6%E9%87%8F%E5%AD%A6/8.jpeg" width="500" height="300"> <br></center><h3 id="step-4-进一步运算"><a href="#step-4-进一步运算" class="headerlink" title="step 4 (进一步运算)"></a>step 4 (进一步运算)</h3><p>如果有多个光源。 反射方程递归。</p><center><img src="/2022/08/22/games101-%E7%AC%94%E8%AE%B0-%E8%BE%90%E5%B0%84%E5%BA%A6%E9%87%8F%E5%AD%A6/9.jpeg" width="600" height="300"> <br></center><p>如果光源并非点光源而存在面光源，积分上面的公式。</p><center><img src="/2022/08/22/games101-%E7%AC%94%E8%AE%B0-%E8%BE%90%E5%B0%84%E5%BA%A6%E9%87%8F%E5%AD%A6/10.jpeg" width="600" height="300"> <br></center><p>还需要考虑从其他物体上反射过来的光线（我们在这里就可以给其他物体上反射过来的光线当成是一种光源）。并且这是一个位置量。从下图可以看到。目前我们有两个未知量。所以采用递归。</p><center><img src="/2022/08/22/games101-%E7%AC%94%E8%AE%B0-%E8%BE%90%E5%B0%84%E5%BA%A6%E9%87%8F%E5%AD%A6/11.jpeg" width="600" height="300"> <br></center><p>简写渲染方程。最终得到：</p><p>我们想求的能量 &#x3D; 本身光源的能量 + K（反射能量符，可以讲能量反射掉）* L（能量）</p><center><img src="/2022/08/22/games101-%E7%AC%94%E8%AE%B0-%E8%BE%90%E5%B0%84%E5%BA%A6%E9%87%8F%E5%AD%A6/12.jpeg" width="600" height="300"> <br></center><p>我们讲公式简化得到。</p><p>不弹射：   自己的光</p><p>弹射一次： 直接光照</p><p>弹射两次： 间接光照</p><p>弹射三次： 全局光照</p><center><img src="/2022/08/22/games101-%E7%AC%94%E8%AE%B0-%E8%BE%90%E5%B0%84%E5%BA%A6%E9%87%8F%E5%AD%A6/13.jpeg" width="600" height="300"> <br></center><center><img src="/2022/08/22/games101-%E7%AC%94%E8%AE%B0-%E8%BE%90%E5%B0%84%E5%BA%A6%E9%87%8F%E5%AD%A6/14.jpeg" width="600" height="300"> <br></center>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>基于图形学中渲染的光线追踪算法综述</title>
    <link href="/2022/08/19/%E5%85%B3%E4%BA%8E%E5%85%89%E7%BA%BF%E8%BF%BD%E8%B8%AA/"/>
    <url>/2022/08/19/%E5%85%B3%E4%BA%8E%E5%85%89%E7%BA%BF%E8%BF%BD%E8%B8%AA/</url>
    
    <content type="html"><![CDATA[<h3 id="abstract"><a href="#abstract" class="headerlink" title="abstract:"></a>abstract:</h3><p>Ray tracing is a method which could approximates real-world light sources.  With the rapid development of graphic cards , ray tracing is become p </p><p>光线追踪是一种可以模拟出近似与现实光照的方法，相较于传统光栅化它消耗的算力更为巨大但模拟的光源也更接近于现实。 近些年来随着硬件发展的迅速，计算机的算力已经可以允许我们大规模使用复杂的光线追踪进行渲染。把光线追踪分为。。。。 本文列举一些当前比较主流的光线追踪算法，并且详细描述了不同方法的优缺点与对整个CG领域的贡献。并在结尾总结了光线追踪的未来发展趋势。</p><h3 id="introduction"><a href="#introduction" class="headerlink" title="introduction:"></a>introduction:</h3><p> To compare it with rasterization , it cost more time to render.</p><p>关于现实生活中的光线得到历史。。</p><p>关于ray tarcing 的历史 。。最早的ray tracing 模型 LINKS-1 Computer 的简要介绍。。 </p><p>目前主流的ray tracing model 介绍 ： whitted-style。。 通常ray tracing 需要大量的算力进行计算。 但我们可以用一些加速方法。 比如BVH 。。。。</p><p>总的来说ray tracing 的基本流程是。。  我们首先有一个model 首先选用合适的加速方法。。 然后进行光追渲染。。。</p><h3 id="light-in-CG-VS-light-in-real-life"><a href="#light-in-CG-VS-light-in-real-life" class="headerlink" title="light in CG  VS light in real life"></a>light in CG  VS light in real life</h3><p>尽管光追能做到拟真是世界光源，但光线追踪和物理上光的反射不太一样，在cg中我们这么定义：</p><ol><li>光沿直线传播</li><li>光线相交互不影响</li><li>光路可逆，光线传入眼睛可以当作眼睛发出光线。</li></ol><p>但现实中的光源特点：</p><ol><li>接近于无限反射。直到电磁波消耗殆尽。</li><li>现实中的光是由一种电磁波。</li><li>不可能被计算机模拟。</li></ol><h3 id="光栅化-VS-光线追踪"><a href="#光栅化-VS-光线追踪" class="headerlink" title="光栅化 VS 光线追踪"></a>光栅化 VS 光线追踪</h3><p>因为光栅化没法做到很真实的物理效果，所以我们尝试使用光线追踪， 因为光追会显现出来更加真实的物理效果，反之会消耗更多的时间去渲染。</p><ol><li>光栅化只能反射2次。但光线追踪可以反射任意多次。</li></ol><h3 id="第一种类别的model-（whitted-style）"><a href="#第一种类别的model-（whitted-style）" class="headerlink" title="第一种类别的model （whitted-style）"></a>第一种类别的model （whitted-style）</h3><p>（在这里应该写出来这种model 属于那种类别。 对此类别进行分析 。 距离处whitted-style的优缺点）</p><p>就是将单一的pinhole camera model 进行递归 ，从而模拟出光线多次反射的效果 ，命名为recurive ray tracing 。但需要注意以下两点：</p><ol><li>光线强度会随着反射次数的增加而逐渐衰减。 </li><li>每个三角形的光都有可能是由很多个光源复合而成的。这里就涉及到了权重值问题，比如黄色光和红色光同时射入，这个三角形应该被渲染成橘色。但由于入射光的亮度可能不同，橘色的深浅也有不同。通过不断的累加颜色最终得到像素应该呈现的颜色。</li></ol><p>优点是：</p><p>缺点是：</p><h3 id="第二种类别的model-（）："><a href="#第二种类别的model-（）：" class="headerlink" title="第二种类别的model （）："></a>第二种类别的model （）：</h3><h3 id="关于model的加速结构-："><a href="#关于model的加速结构-：" class="headerlink" title="关于model的加速结构 ："></a>关于model的加速结构 ：</h3><p>BVM: </p><p>Oct-Tree (八叉树): 有不同的分法。比如不停的划分，直到其中有一块包围盒不包含物品位置。</p><p>KD-Tree(二叉树): 拼多多树，先横砍一刀沿物品切线。再每个包围盒竖直砍一刀。 目的是保持包围盒的均匀。三纬xyzxyz不断重复切。</p><p>BSP-Tree(二叉树): 也是不断砍。但是不好计算。之前我们提到的包围盒AABB就是因为沿着xyz轴的包围盒好被计算。</p><p>其他加速结构：</p><h3 id="应用辐射度量学来增强光线追踪的真实性："><a href="#应用辐射度量学来增强光线追踪的真实性：" class="headerlink" title="应用辐射度量学来增强光线追踪的真实性："></a>应用辐射度量学来增强光线追踪的真实性：</h3><p>\</p><h3 id="神经网络用于-ray-tracing-加速"><a href="#神经网络用于-ray-tracing-加速" class="headerlink" title="神经网络用于 ray tracing 加速"></a>神经网络用于 ray tracing 加速</h3><p>面临问题： 算法过于复杂。无法解决 。但我们可以引入机器学习model来加速</p><h3 id="总结与展望："><a href="#总结与展望：" class="headerlink" title="总结与展望："></a>总结与展望：</h3>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>dragon_model</title>
    <link href="/2022/08/19/dragon-model/"/>
    <url>/2022/08/19/dragon-model/</url>
    
    <content type="html"><![CDATA[<center><img src="/2022/08/19/dragon-model/1.mp4" alt="GAM GLM ..." width="900" height="300"> <br></center>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>games101_笔记(光追)</title>
    <link href="/2022/08/12/games101-%E7%AC%94%E8%AE%B0-%E5%85%89%E8%BF%BD/"/>
    <url>/2022/08/12/games101-%E7%AC%94%E8%AE%B0-%E5%85%89%E8%BF%BD/</url>
    
    <content type="html"><![CDATA[<h2 id="intro-："><a href="#intro-：" class="headerlink" title="intro ："></a>intro ：</h2><p>因为光栅化(rasterization)没法做到很真实的物理效果，所以我们尝试使用光线追踪(ray tracing)， 因为光追会显现出来更加真实的物理效果，反之会消耗更多的时间去渲染。</p><h2 id="step-1-light-rays-："><a href="#step-1-light-rays-：" class="headerlink" title="step 1 (light rays)："></a>step 1 (light rays)：</h2><p>尽管光追能做到拟真是世界光源，但光线追踪和物理上光的反射不太一样，在cg中我们这么定义：</p><ol><li>光沿直线传播</li><li>光线相交互不影响</li><li>光路可逆，光线传入眼睛可以当作眼睛发出光线。</li></ol><h2 id="step-2（pinhole-camera-model"><a href="#step-2（pinhole-camera-model" class="headerlink" title="step 2（pinhole camera model):"></a>step 2（pinhole camera model):</h2><p>每一个像素（pixel）投射一个光线，寻找这条光线所经过的路径，并判断与光源之间有没有被遮挡。如图所示，从light source返回一条光束，在之后通过镜面反射进入人眼。<br>但这个模型只有一次反射，和光栅化区别不大。于是whitted提出下面的模型。</p><center><img src="/2022/08/12/games101-%E7%AC%94%E8%AE%B0-%E5%85%89%E8%BF%BD/1.jpeg" alt="GAM GLM ..." width="450" height="300"> <br></center><h2 id="step-3-whitted-style"><a href="#step-3-whitted-style" class="headerlink" title="step 3 (whitted-style):"></a>step 3 (whitted-style):</h2><p>就是将单一的pinhole camera model 进行递归 ，从而模拟出光线多次反射的效果 ，命名为recurive ray tracing 。但需要注意以下两点：</p><ol><li>光线强度会随着反射次数的增加而逐渐衰减。 </li><li>每个三角形的光都有可能是由很多个光源复合而成的。这里就涉及到了权重值问题，比如黄色光和红色光同时射入，这个三角形应该被渲染成橘色。但由于入射光的亮度可能不同，橘色的深浅也有不同。通过不断的累加颜色最终得到像素应该呈现的颜色。</li></ol><center><img src="/2022/08/12/games101-%E7%AC%94%E8%AE%B0-%E5%85%89%E8%BF%BD/2.jpeg" alt="GAM GLM ..." width="450" height="300"> <br></center><p>如上图所示，</p><ol><li>primary ray: 最终到达像素的光线。</li><li>secondary ray: 中间所有一系列反射的光线。（我不确定是不是只限定于第二次反射）</li><li>shadow ray: 从光源处发出的所有光线。</li></ol><h2 id="step-4-equation"><a href="#step-4-equation" class="headerlink" title="step 4 (equation):"></a>step 4 (equation):</h2><ol><li>Ray: r(t) &#x3D; o + td, 0 &lt;&#x3D; t &lt;&#x3D; ♾️</li></ol><p>任何光线上一点，可以用光线初始强度o + 时间t * 方向d 来表示。</p><ol start="2"><li>Sphere： p: (p-c)^2 - R^2 &#x3D; 0</li></ol><p>球上任何一个点p 到球心c 的距离为 R。</p><ol start="3"><li>联立上面两个公式得到：p: (o + td-c)^2 - R^2 &#x3D; 0</li></ol><p>公式之中只有t 是未知量。 直接可以求得。</p><ol start="4"><li>Plane Equation: p: (p - p’) . N &#x3D; 0</li></ol><p>通过法线N 和 平面上确定一点p‘ 来确定一个平面。 判断目标点p 到 p’的 向量是否垂直于法线N 来判断p 是否在目标平面上。</p><ol start="5"><li>把plane 和 ray equation 结合起来呢？</li></ol><p>我们得知光线上任意一点可以用r(t)来表示。如果这个点在我们的平面上， 也就是r(t)&#x3D;p。我们可以通过这个等式求得光在什么时间(t)能打到平面上进行折射。联立可以得到：t &#x3D; (p’ - o) . N &#x2F; d . N</p><p>注意： 我们需要检查一下t是不是非负数。</p><h2 id="step-5-Moller-Trumbore-Algorithm"><a href="#step-5-Moller-Trumbore-Algorithm" class="headerlink" title="step 5 (Moller Trumbore Algorithm):"></a>step 5 (Moller Trumbore Algorithm):</h2><p>所消耗时间更短。</p><center><img src="/2022/08/12/games101-%E7%AC%94%E8%AE%B0-%E5%85%89%E8%BF%BD/3.jpeg" alt="GAM GLM ..." width="450" height="300"> <br></center><h2 id="step-6-（bounding-volumes）："><a href="#step-6-（bounding-volumes）：" class="headerlink" title="step 6 （bounding volumes）："></a>step 6 （bounding volumes）：</h2><p>如果一束光不与包围盒相交，那么他也不与物品相交。</p><p>我们需要尽可能的避免不必要的运算。方法是给每个物体装进一个长方形里面。如果光无法碰触到这个长方形。则我们不需要考虑这个物体余光的碰撞。我们通常设置这种长方形的长宽高沿着xyz轴。</p><p>如果光于包围盒相交：<br>包围盒里面有很多小包围盒。因为计算包围盒与光线是否相交的时间复杂度是高于光与物品相交的。如果光与小包围盒相交。然后进行反射计算。</p><center><img src="/2022/08/12/games101-%E7%AC%94%E8%AE%B0-%E5%85%89%E8%BF%BD/4.jpeg" alt="GAM GLM ..." width="300" height="300"> <br></center><h2 id="step7-划分包围盒空间的结构"><a href="#step7-划分包围盒空间的结构" class="headerlink" title="step7 (划分包围盒空间的结构):"></a>step7 (划分包围盒空间的结构):</h2><p>Oct-Tree (八叉树): 有不同的分法。比如不停的划分，直到其中有一块包围盒不包含物品位置。</p><p>KD-Tree(二叉树): 拼多多树，先横砍一刀沿物品切线。再每个包围盒竖直砍一刀。 目的是保持包围盒的均匀。三纬xyzxyz不断重复切。</p><p>BSP-Tree(二叉树): 也是不断砍。但是不好计算。之前我们提到的包围盒AABB就是因为沿着xyz轴的包围盒好被计算。</p><center><img src="/2022/08/12/games101-%E7%AC%94%E8%AE%B0-%E5%85%89%E8%BF%BD/5.jpeg" alt="GAM GLM ..." width="900" height="300"> <br></center>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>关于NeuralTalk2</title>
    <link href="/2022/07/17/%E5%85%B3%E4%BA%8ENeuralTalk2/"/>
    <url>/2022/07/17/%E5%85%B3%E4%BA%8ENeuralTalk2/</url>
    
    <content type="html"><![CDATA[<h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><p>参考的步骤进行配置</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/karpathy/</span>neuraltalk2<span class="hljs-regexp">/tree/</span><span class="hljs-number">3</span>c81602809b8b9e5bd3e9e213bf955986485dda7\<br></code></pre></td></tr></table></figure><p>我的环境是macOS + M1</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">$ curl -s https://raw.githubusercontent.com/torch/ezinstall/master/install-deps | bash<br>$ git clone https://github.com/torch/distro.git ~/torch --recursive<br>$ cd ~/torch; <br>$ ./install.sh      # and enter &quot;yes&quot; at the end to modify your bashrc<br>$ source ~/.bashrc <br></code></pre></td></tr></table></figure><p>接下来</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">$ luarocks install nn<br>$ luarocks install nngraph <br>$ luarocks install image <br></code></pre></td></tr></table></figure><p>在上面进行luarock安装的时候报错</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">Installing https:<span class="hljs-regexp">//</span>raw.githubusercontent.com<span class="hljs-regexp">/torch/</span>rocks<span class="hljs-regexp">/master/</span>nn-scm-<span class="hljs-number">1</span>.rockspec...<br>Using https:<span class="hljs-regexp">//</span>raw.githubusercontent.com<span class="hljs-regexp">/torch/</span>rocks<span class="hljs-regexp">/master/</span>nn-scm-<span class="hljs-number">1</span>.rockspec... switching to <span class="hljs-string">&#x27;build&#x27;</span> mode<br>正克隆到 <span class="hljs-string">&#x27;nn&#x27;</span>...<br>fatal: 无法连接到 github.com：<br>github.com[<span class="hljs-number">0</span>: <span class="hljs-number">140.82</span>.<span class="hljs-number">121.4</span>]: errno=Operation timed out<br></code></pre></td></tr></table></figure><p>我的解决方案有两个步骤</p><ol><li>(我觉得这个问题和这个步骤没关系) 我首先安装了lua</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-variable">$</span> <span class="hljs-built_in">curl</span> <span class="hljs-literal">-R</span> <span class="hljs-literal">-O</span> http://www.lua.org/ftp/lua<span class="hljs-literal">-5</span>.<span class="hljs-number">4.3</span>.tar.gz<br><span class="hljs-variable">$</span> tar <span class="hljs-literal">-zxvf</span> lua<span class="hljs-literal">-5</span>.<span class="hljs-number">4.3</span>.tar.gz<br><span class="hljs-variable">$</span> <span class="hljs-built_in">cd</span> lua<span class="hljs-literal">-5</span>.<span class="hljs-number">4.3</span><br><span class="hljs-variable">$</span> make<br></code></pre></td></tr></table></figure><ol start="2"><li>还是stackoverflow好用（不是 ，加这个命令行就好了。</li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">git config --global url.https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/.insteadOf git:/</span><span class="hljs-regexp">/github.com/</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>openGL学习笔记(1)</title>
    <link href="/2022/07/08/openGL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1/"/>
    <url>/2022/07/08/openGL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1/</url>
    
    <content type="html"><![CDATA[<h1 id="“GLShaderManager-h”-和-“GLTools-h”"><a href="#“GLShaderManager-h”-和-“GLTools-h”" class="headerlink" title="“GLShaderManager.h” 和 “GLTools.h”"></a>“GLShaderManager.h” 和 “GLTools.h”</h1>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>openGL的学习笔记</title>
    <link href="/2022/07/02/openGL%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <url>/2022/07/02/openGL%E7%9A%84%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>模型的透明度</title>
    <link href="/2022/06/24/%E6%A8%A1%E5%9E%8B%E7%9A%84%E9%80%8F%E6%98%8E%E5%BA%A6/"/>
    <url>/2022/06/24/%E6%A8%A1%E5%9E%8B%E7%9A%84%E9%80%8F%E6%98%8E%E5%BA%A6/</url>
    
    <content type="html"><![CDATA[<h1 id="explainable-AI-（XAI）"><a href="#explainable-AI-（XAI）" class="headerlink" title="explainable AI （XAI）"></a>explainable AI （XAI）</h1><h3 id="XAI"><a href="#XAI" class="headerlink" title="XAI"></a>XAI</h3><p>指的是让人们明白这个模型是为什么得到这个结果的。因为AI有可能会作弊。比如通过看图片是否有copyright里面是不是有马的字段来判断图片是不是马。</p><p>XAI 我们就可以不断的人为优化模型。</p><p>black-box AI， 与XAI相反。 我们不知道模型通过什么得到的结果也不知道如何优化。</p><h3 id="各种learning"><a href="#各种learning" class="headerlink" title="各种learning"></a>各种learning</h3><p>监督学习(supervised learning):<br>  每个数据都有对应的label。良性肿瘤和恶性肿瘤。</p><p>无监督学习(unsupervised learning):<br>  数据没有labels。我们不知道每一个数据对应的什么意思。比如google有上千个新闻。我们没发给每一个加上label。我们就可以通过”聚类”的形式来将相似的定为一个专栏，达成新闻分类。</p><p>表示学习(representation learning):<br>  不同方法来表示学习。比如hsv和rgb都可以表示颜色。</p><center><img src="/2022/06/24/%E6%A8%A1%E5%9E%8B%E7%9A%84%E9%80%8F%E6%98%8E%E5%BA%A6/1.jpeg" alt="各种学习的精准度和可解释度" width="256" height="256"> <br>各种学习的精准度和可解释度</center><h3 id="各种model"><a href="#各种model" class="headerlink" title="各种model"></a>各种model</h3><h4 id="Interpretable-Models"><a href="#Interpretable-Models" class="headerlink" title="Interpretable Models"></a>Interpretable Models</h4><p>• Decision Trees, Lists a ,Sets and rules <br>基本的if else</p><p>• GAMs <br>• GLMs <br>• Linear regression <br>• Logistic regression \</p><center><img src="/2022/06/24/%E6%A8%A1%E5%9E%8B%E7%9A%84%E9%80%8F%E6%98%8E%E5%BA%A6/2.jpeg" alt="GAM GLM ..." width="1300" height="150"> <br>GAM GLM ...</center><p>• KNNs</p><h3 id="End-to-End-XAI"><a href="#End-to-End-XAI" class="headerlink" title="End-to-End XAI"></a>End-to-End XAI</h3><p>比传统的represtation learning 多了更多的不同等级的特征。 比如：<br>simple feature -&gt; complex feature -&gt; more complex feature。<br>这种结构对模型参数的调节空间更大。</p><h3 id="Shapley-Additive-Explanation"><a href="#Shapley-Additive-Explanation" class="headerlink" title="Shapley Additive Explanation"></a>Shapley Additive Explanation</h3>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>BIG-bench</title>
    <link href="/2022/06/24/BIG-bench/"/>
    <url>/2022/06/24/BIG-bench/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
    <tags>
      
      <tag>我的笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>学习如何使用openai</title>
    <link href="/2022/06/21/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8openai/"/>
    <url>/2022/06/21/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8openai/</url>
    
    <content type="html"><![CDATA[<h3 id="text-davinci-002"><a href="#text-davinci-002" class="headerlink" title="text-davinci-002"></a>text-davinci-002</h3>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>never ending learning 笔记</title>
    <link href="/2022/06/07/never_ending_learning/"/>
    <url>/2022/06/07/never_ending_learning/</url>
    
    <content type="html"><![CDATA[<p> NELL 早期采用 Carlson et al. 模型。它的作用是阅读Web来获取信息。<br></p><p>输入：<br></p><ol><li>一个初始的 ontology 里面存放着很多categories （运动，运动员）。一个二原组的realtion 表示着 categories之间的关系。 比如：  哪个运动员在玩什么运动（x,y）。<br></li><li>每一个relation 或者是 categories 都有差不多12个labels， 比如运动有足球篮球一类的名词。<br></li><li>Web 从ClueWeb（一个有着1亿个网页的数据集）中获得。并且Google授权了NELL 10万个搜索问题的api。<br></li><li>偶尔会有人为参与。<br></li></ol><p>做什么：<br></p><ol><li>抓去更多的信息从web 并且移除老的不正确的信息。在这个过程中数据集不断的增长并且每一个information都有着出处和可信度。</li><li>每天学习如何比昨天读得更好</li></ol><p>总体来讲，NELL软件层面上的架构是：beliefs通过NEIL，OntExt 等一些辨别手段来选出一些候选的beliefs 再通过knowledge integrator 来对原有的beliefs 进行更新。</p><p>期望最大化算法（EM）:在概率模型中寻找最大似然<br><br>似然 (likelihood):对于模型的不同参数出现目标样本的概率是多少<br><br>知识整合 (Knowledge Integration): 就是将多个知识模型转化为一个公用的模型。像是通过多种角度判断一个游戏的好坏，比如画面模型，剧情模型。 将这些模型整合起来来得到一个评判游戏的好坏程度的模型。</p><p>NELL 的学习过程类似于EM用于半监督学习。每一次循环都有E-like step 和 M-like step。<br></p><ol><li>E-like step : 所有的beliefs 都需要重新被估计。在NELL中的每一个reading和inference 模型 都需要更新到KB之中（曾加或者减少一些beliefs）。通过知识整合（KI）我们将一大堆独立的建议转化为对每一个潜在kb 里面的 belief 的可信度。<br></li><li>M-like step :对上面更新的每一个模型都做一个针对于他们的学习算法。得到了一个上千个互相关联的学习任务。<br></li></ol><p>NELL因为做不到完全EM算法。所以我们在进行E-like的时候设置一个upperbound。那些有高可信度的新的belief才会被我们考虑并更新到KB之中。<br>并且当我们更新的时候，采用limited-radius fashion的方式。简单来说就是我们只考虑当前更新的belief直接相关的beliefs的更新，不再做进一步的考虑。</p><h2 id="Knowledge-Integrator"><a href="#Knowledge-Integrator" class="headerlink" title="Knowledge Integrator"></a>Knowledge Integrator</h2><p>KI只考虑类别类型一致的beliefs。比如他只检验在relation triple中的实体类型是不是与realtion一致。而不是考虑用一个新的triple作为一个触发器来更新beliefs在同一次循环之中。</p><h2 id="新增学习任务和实体"><a href="#新增学习任务和实体" class="headerlink" title="新增学习任务和实体"></a>新增学习任务和实体</h2><h3 id="OntExt"><a href="#OntExt" class="headerlink" title="OntExt"></a>OntExt</h3><p>OntExt 创建新realtion。他通过寻找像所有已经有的实体，去寻找那个最新最经常被考虑的relation，把他用于链接两个实体。实现这个过程分为三步：</p><ol><li>一个句子中如果有已经存在的category pair了。就将它直接提取出。像是&lt;动物，食物&gt;。狗在吃肉。 狗和肉就被提取出来了。</li><li>把一个文章构建出一个2D矩阵用来寻找新的relation。</li><li>OntExt自动发现新的relations。发现了之后立刻做为一个触发器用来适应于新的句子。</li></ol><h3 id="VerbKB"><a href="#VerbKB" class="headerlink" title="VerbKB"></a>VerbKB</h3><p>动词和动词短语经常用于表达名词之间的关系。有点像是一个动词的模式，用来分析主语，宾语还有动词短语之间的关系。作为一个三元组。&lt;主语category，动词短语，宾语category&gt;。NELL已经有6.5w个动词了。覆盖了ClueWeb2010的98%。现在正在寻找扩大这个动词规模的方法。</p><h3 id="关于自我评估和自我反思"><a href="#关于自我评估和自我反思" class="headerlink" title="关于自我评估和自我反思"></a>关于自我评估和自我反思</h3><p>期望NELL可以针对于他应该着重学习的地方进行学习而不是像现在这样只会检测没有。目前的研究目标就是把未标记的数据用作数据集。我们可以这么来做：通过Platanios et al.32我们知道如果我们有三个或者更多的funciton用来求解。我们判断是否所有的函数得到的都是同一个名词，因为他们判断成功与否是独立的。所以可以通过他们的精准度来判断模型的好坏。通过这种方式精准度在逐年增加。<br>NELL对于不同种类的词语表现相差很多。比如对河流，身体部分这种精准度能到95% 但是对于国家的首都精准度就很低。原因有两种：</p><ol><li>有可能我们的目标得到的结果并不在我们想要的集合里面，我们就给他新定义一个集合。可能这个集合只能被他自己所用，并且会误导别的我们想要测试的目标的正确性。</li><li>可能NELL已经弄错了，由于错误的传播谓语。就比如我们目前的NELL他判定所有的星球名字都以什么什么球为结尾。如果我们拿出来一个不是以球结尾的他就没法正确判断了。</li></ol><p>有一些很简单的词汇被复杂化了。比如开心 -&gt; 难以置信的开心。这使得学习任务变得越来越多。未来的研究就是让他有自我反思的能力。</p><h2 id="汇总"><a href="#汇总" class="headerlink" title="汇总"></a>汇总</h2><p>NELL 作为一个早期的案例有很多我们吸取教训的地方：</p><ol><li>coupling constraints限制了后续学习其他任务。</li><li>允许去学习新的coupling constraints。</li><li>现阶段模型是a-b c-d ， a-b-c-d是一个全新的模型。未来需要做到的是把a-b 作为一个谓词短语 来使用。 已达成（a-b）- (c-d)的目的。</li></ol><p>NELL的限制：</p><ol><li>没有反思。他不会意识到自己做错了很久且没有任何进展。也没有监控自己性能的能力。</li><li>有些方法是固定的。可塑性很差。比如寻找名词或者名词短语这种方法。我们是无法进行学习或者更改的。</li><li>目前NELL只用了一个简单的frame base。 他没有框架去推到时间和空间。<p></p></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>我的笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
